{"title":"Utiliser des variables et fonctions CSS, c'est possible !","headings":[{"level":3,"text":"⇢ cssnext","id":"⇢-cssnext"},{"level":2,"text":"CSS n’a ni variables, ni fonctions","id":"css-na-ni-variables-ni-fonctions"},{"level":2,"text":"Comment faire pour avoir des variables et fonctions dans CSS ?","id":"comment-faire-pour-avoir-des-variables-et-fonctions-dans-css-"},{"level":2,"text":"Présentation des surcouches existantes aux langages des CSS","id":"présentation-des-surcouches-existantes-aux-langages-des-css"},{"level":3,"text":"Sass","id":"sass"},{"level":4,"text":"Petit exemple de code Sass avec la syntaxe Scss","id":"petit-exemple-de-code-sass-avec-la-syntaxe-scss"},{"level":3,"text":"LESS","id":"less"},{"level":4,"text":"Petit exemple de code LESS","id":"petit-exemple-de-code-less"},{"level":3,"text":"Stylus","id":"stylus"},{"level":4,"text":"Petit exemple de code Stylus","id":"petit-exemple-de-code-stylus"},{"level":2,"text":"Quel langage choisir pour générer ses CSS ?","id":"quel-langage-choisir-pour-générer-ses-css-"}],"date":"2011-04-21T00:00:00.000Z","lang":"fr","tags":["css"],"body":{"tag":"div","children":[{"tag":"p","children":[{"tag":"strong","children":["Note: cette article est déprécié puisque les spécifications CSS en cours\nd'écriture prévoient beaucoup de customisation possible. Si vous souhaitez\nutiliser cela dès aujourd'hui, je vous renvois sur le projet que j'ai créé qui\npermet d'utiliser aujourd'hui la syntaxe CSS de demain:"]}]},"\n",{"tag":"h3","props":{"id":"⇢-cssnext"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#⇢-cssnext"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"⇢ ",{"tag":"em","children":[{"tag":"a","props":{"href":"https://cssnext.github.io"},"children":["cssnext"]}]}]},"\n",{"tag":"hr"},"\n",{"tag":"p","children":["Depuis la création d’Internet à aujourd’hui, les interfaces web ont bien\névolués. Les langages et méthodes aussi. On est passé de sites statiques à des\nsites dynamiques, puis hautement dynamiques (la fameuse période 2.0…). Dans tous\nça, CSS n’a, à mon sens, que très peu évolué d’un point de vue des possibilités\ndu langage. Certains disent que la puissance des CSS réside dans la simplicité\nde celles-ci. Ce qui n’est pas forcément faux. Ca se discute."]},"\n",{"tag":"h2","props":{"id":"css-na-ni-variables-ni-fonctions"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#css-na-ni-variables-ni-fonctions"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"CSS n’a ni variables, ni fonctions"]},"\n",{"tag":"p","children":["Le langage des CSS n’a pas de côté dynamique. C’est lui avec lequel, à chaque\nfois qu’on intègre une maquette graphique, on doit se taper tout de zéro. Il a\nbeau exister des ",{"tag":"a","props":{"href":"http://cssresetr.com/"},"children":["CSS « Reset »"]},", ",{"tag":"a","props":{"href":"http://css.4design.tl/framework-css-semantique-maquette-dynamique-et-autres-notes"},"children":["des frameworks CSS"]},", ",{"tag":"a","props":{"href":"http://css.4design.tl/framework-css-mettez-vos-grilles-au-pas"},"children":["tout un tas de\ngrilles prête à l’emploi"]},", ",{"tag":"a","props":{"href":"https://github.com/stubbornella/oocss"},"children":["des composants de CSS réutilisables"]}," avec\nl’approche ",{"tag":"a","props":{"href":"http://fr.wikipedia.org/wiki/Objet_(informatique)"},"children":["objet"]},", je n’ai jamais réellement été satisfait par ces méthodes,\nque ce soit à cause des contraintes qu’impose la syntaxe (devoir mettre des\nclasses à tout va dans l’HTML ça peut vite devenir chiant dans un CMS), ou par\nd’éventuelles limitations qui obligent à « trop » modifier la source du document\n(pas assez de, ou trop de, ou juste ça me plait pas comment c’est fait)."]},"\n",{"tag":"h2","props":{"id":"comment-faire-pour-avoir-des-variables-et-fonctions-dans-css-"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#comment-faire-pour-avoir-des-variables-et-fonctions-dans-css-"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"Comment faire pour avoir des variables et fonctions dans CSS ?"]},"\n",{"tag":"p","children":["Bridé par le language, j’ai cherché des solutions car j’ai pas forcément envie\nd’attendre CSS 4 qui sera surement pas officiel avant 20 ans (sachant que CSS 3\nn’est encore qu’un brouillon et que CSS 2.1 est à peine ouvert aux\ncommentaires…) Du coup, voilà ce que j’ai recencé à ce jour:"]},"\n",{"tag":"ul","children":["\n",{"tag":"li","children":[{"tag":"a","props":{"href":"http://sass-lang.com/"},"children":["Sass"]}," dispo sur ",{"tag":"a","props":{"href":"https://github.com/nex3/sass","title":"Sass sur Github"},"children":["GitHub"]}]},"\n",{"tag":"li","children":[{"tag":"a","props":{"href":"http://lesscss.org/"},"children":["LESS"]}," dispo sur ",{"tag":"a","props":{"href":"https://github.com/less/less.js","title":"LESS sur Github"},"children":["GitHub"]}]},"\n",{"tag":"li","children":[{"tag":"a","props":{"href":"http://learnboost.github.io/stylus/"},"children":["Stylus"]}," dispo sur ",{"tag":"a","props":{"href":"https://github.com/LearnBoost/stylus","title":"Stylus sur Github"},"children":["GitHub"]}]},"\n"]},"\n",{"tag":"h2","props":{"id":"présentation-des-surcouches-existantes-aux-langages-des-css"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#présentation-des-surcouches-existantes-aux-langages-des-css"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"Présentation des surcouches existantes aux langages des CSS"]},"\n",{"tag":"p","children":["Voici des textes traduits des sites officiels, qui résument très bien les\noutils. Puis s’ils résument pas bien, c’est pas de ma faute, c’est comme ça mais\nça montre qui est clair et qui ne l’est pas :)"]},"\n",{"tag":"h3","props":{"id":"sass"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#sass"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"Sass"]},"\n",{"tag":"blockquote","children":["\n",{"tag":"p","children":["Sass rend les CSS à nouveau amusant. Sass est une extension de CSS 3, en\najoutant règles imbriqués, variables, ",{"tag":"a","props":{"href":"http://fr.wikipedia.org/wiki/Mixin"},"children":["mixins"]},", l’héritage de sélection,\net encore plus. Cela ce transforme en CSS standard, bien formaté, à l’aide\nd’outils en ligne de commande ou avec des plugins de frameworks web [-ou un >\npetit outil avec GUI que je vous présenterais ;) ]."]},"\n",{"tag":"p","children":["Sass à 2 syntaxes. La principale (depuis Sass 3) est connu sous le nom de\n“SCSS » (pour “Sassy CSS”), et est un surensemble de la syntaxe CSS 3. Cela\nveut dire que du tout feuille de styles CSS 3 est aussi du SCSS valide. Les\nfichiers SCSS utilise l’extension .scss."]},"\n",{"tag":"p","children":["La seconde sxyntaxe, plus ancienne, est connu comme la syntaxe indenté (juste\n“Sass”). Inspiré par le laconisme de ",{"tag":"a","props":{"href":"http://haml.info/"},"children":["Haml"]},", elle est destinée aux\npersonnes qui préfèrent la concision. Au lieu de crochets et des\npoints-virgules, elle utilise l’indentation des lignes pour spécifier les\nblocs. Bien que elle ne soit plus la syntaxe primaire, cette syntaxe\ncontinuera d’être pris en charge. Les fichiers de cette ancienne syntaxe\nutilisent l’extension .sass."]},"\n"]},"\n",{"tag":"h4","props":{"id":"petit-exemple-de-code-sass-avec-la-syntaxe-scss"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#petit-exemple-de-code-sass-avec-la-syntaxe-scss"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"Petit exemple de code Sass avec la syntaxe Scss"]},"\n",{"tag":"pre","children":[{"tag":"code","props":{"class":"hljs language-scss"},"children":[{"tag":"span","props":{"class":"hljs-comment"},"children":["// note : ceci est bien un commentaire valide avec sass. Au revoir les /**/"]},"\n\n",{"tag":"span","props":{"class":"hljs-variable"},"children":["$blue"]},": ",{"tag":"span","props":{"class":"hljs-number"},"children":["#3bbfce"]},"; ",{"tag":"span","props":{"class":"hljs-comment"},"children":["// Variable"]},"\n",{"tag":"span","props":{"class":"hljs-selector-class"},"children":[".content-navigation"]}," {\n  ",{"tag":"span","props":{"class":"hljs-attribute"},"children":["border-color"]},": ",{"tag":"span","props":{"class":"hljs-variable"},"children":["$blue"]},";\n\n  ",{"tag":"span","props":{"class":"hljs-comment"},"children":["// mixin"]},"\n  ",{"tag":"span","props":{"class":"hljs-attribute"},"children":["color"]},": darken(",{"tag":"span","props":{"class":"hljs-variable"},"children":["$blue"]},", ",{"tag":"span","props":{"class":"hljs-number"},"children":["9%"]},");\n\n  ",{"tag":"span","props":{"class":"hljs-comment"},"children":["// Imbrication"]},"\n  ",{"tag":"span","props":{"class":"hljs-selector-tag"},"children":["li"]}," {\n    ",{"tag":"span","props":{"class":"hljs-attribute"},"children":["font"]},": {\n      family: serif;\n      weight: bold;\n      size: ",{"tag":"span","props":{"class":"hljs-number"},"children":["1.2em"]},";\n    }\n  }\n}\n\n",{"tag":"span","props":{"class":"hljs-variable"},"children":["$margin"]},": ",{"tag":"span","props":{"class":"hljs-number"},"children":["16px"]},";\n",{"tag":"span","props":{"class":"hljs-selector-class"},"children":[".border"]}," {\n  ",{"tag":"span","props":{"class":"hljs-comment"},"children":["// operateurs"]},"\n  ",{"tag":"span","props":{"class":"hljs-attribute"},"children":["padding"]},": ",{"tag":"span","props":{"class":"hljs-variable"},"children":["$margin"]}," / ",{"tag":"span","props":{"class":"hljs-number"},"children":["2"]},";\n  ",{"tag":"span","props":{"class":"hljs-attribute"},"children":["margin"]},": ",{"tag":"span","props":{"class":"hljs-variable"},"children":["$margin"]}," / ",{"tag":"span","props":{"class":"hljs-number"},"children":["2"]},";\n  ",{"tag":"span","props":{"class":"hljs-attribute"},"children":["border-color"]},": ",{"tag":"span","props":{"class":"hljs-variable"},"children":["$blue"]},";\n}"]}]},"\n",{"tag":"h3","props":{"id":"less"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#less"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"LESS"]},"\n",{"tag":"blockquote","children":["\n",{"tag":"p","children":["LESS étend CSS avec un comportement dynamique grâce à des variables, mixins,\nopérations et fonctions. LESS fonctionne à la fois sur côté-client (IE 6+,\nWebkit, Firefox) et côté serveur avec Node.js."]},"\n"]},"\n",{"tag":"h4","props":{"id":"petit-exemple-de-code-less"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#petit-exemple-de-code-less"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"Petit exemple de code LESS"]},"\n",{"tag":"pre","children":[{"tag":"code","props":{"class":"hljs language-less"},"children":[{"tag":"span","props":{"class":"hljs-selector-class"},"children":[".box-shadow"]}," (",{"tag":"span","props":{"class":"hljs-variable"},"children":["@x"]},": ",{"tag":"span","props":{"class":"hljs-number"},"children":["0"]},", ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@y"]},": ",{"tag":"span","props":{"class":"hljs-number"},"children":["0"]},", ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@blur"]},": ",{"tag":"span","props":{"class":"hljs-number"},"children":["1px"]},", ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@alpha"]},") {\n  ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@val:"]}," ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@x"]}," ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@y"]}," ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@blur"]}," rgba(",{"tag":"span","props":{"class":"hljs-number"},"children":["0"]},", ",{"tag":"span","props":{"class":"hljs-number"},"children":["0"]},", ",{"tag":"span","props":{"class":"hljs-number"},"children":["0"]},", ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@alpha"]},");\n\n  ",{"tag":"span","props":{"class":"hljs-attribute"},"children":["box-shadow"]},": ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@val"]},";\n  -webkit-",{"tag":"span","props":{"class":"hljs-attribute"},"children":["box-shadow"]},": ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@val"]},";\n  -moz-",{"tag":"span","props":{"class":"hljs-attribute"},"children":["box-shadow"]},": ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@val"]},";\n}\n\n",{"tag":"span","props":{"class":"hljs-selector-class"},"children":[".box"]}," {\n  ",{"tag":"span","props":{"class":"hljs-variable"},"children":["@base:"]}," ",{"tag":"span","props":{"class":"hljs-number"},"children":["#f938ab"]},";\n  ",{"tag":"span","props":{"class":"hljs-attribute"},"children":["color"]},": saturate(",{"tag":"span","props":{"class":"hljs-variable"},"children":["@base"]},", ",{"tag":"span","props":{"class":"hljs-number"},"children":["5%"]},");\n  ",{"tag":"span","props":{"class":"hljs-attribute"},"children":["border-color"]},": lighten(",{"tag":"span","props":{"class":"hljs-variable"},"children":["@base"]},", ",{"tag":"span","props":{"class":"hljs-number"},"children":["30%"]},");\n  ",{"tag":"span","props":{"class":"hljs-selector-tag"},"children":["div"]}," {\n    ",{"tag":"span","props":{"class":"hljs-selector-class"},"children":[".box-shadow"]},"(",{"tag":"span","props":{"class":"hljs-number"},"children":["0"]},", ",{"tag":"span","props":{"class":"hljs-number"},"children":["0"]},", ",{"tag":"span","props":{"class":"hljs-number"},"children":["5px"]},", ",{"tag":"span","props":{"class":"hljs-number"},"children":["0.4"]},");\n  }\n}"]}]},"\n",{"tag":"h3","props":{"id":"stylus"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#stylus"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"Stylus"]},"\n",{"tag":"blockquote","children":["\n",{"tag":"p","children":["Stylus est un nouveau langage révolutionnaire, qui apporte une méthode\nefficace, dynamique et expressive pour générer des CSS."]},"\n"]},"\n",{"tag":"h4","props":{"id":"petit-exemple-de-code-stylus"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#petit-exemple-de-code-stylus"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"Petit exemple de code Stylus"]},"\n",{"tag":"pre","children":[{"tag":"code","children":["border-radius()\n  -webkit-border-radius arguments\n  -moz-border-radius arguments\n  border-radius arguments\n\nbody\n  font 12px Helvetica, Arial, sans-serif\n\na.button\n  border-radius 5px\n"]}]},"\n",{"tag":"h2","props":{"id":"quel-langage-choisir-pour-générer-ses-css-"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#quel-langage-choisir-pour-générer-ses-css-"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"Quel langage choisir pour générer ses CSS ?"]},"\n",{"tag":"p","children":["À la vue des syntaxe (toute assez proche), on sais bien qu’on parle de CSS. On\ndégage 2 approches: une qui ajoute des possibilités à CSS sans modifier la\nsyntaxe d’origine (Scss, LESS), et une qui veut simplifier (Sass, Stylus). La\nsyntaxe ne fait pas tout, il faut aussi regarder la méthode de génération des\nfeuilles de style en CSS :"]},"\n",{"tag":"ul","children":["\n",{"tag":"li","children":["Sass possède une méthode en ligne de commande qui va surveiller vos fichiers\n.sass ou .scss et va mettre à jour tout seul vos CSS,"]},"\n",{"tag":"li","children":["LESS possède pour le développement, un fichier javascript, et pour la\nproduction, un compilateur (ligne de commande),"]},"\n",{"tag":"li","children":["Stylus utilise une méthode de compilation (je n’ai pas été foutu de trouver un\nexemple clair rapidement)"]},"\n"]},"\n",{"tag":"p","children":["Sass est basé sur Ruby, LESS et Stylus sur Javascript (Node.js). Tous les 3\npeuvents être utilisé depuis d’autres langages pour peu que vous utilisiez des\ninterface comme ",{"tag":"a","props":{"href":"https://github.com/kriswallsmith/assetic"},"children":["Assetic en PHP"]},". Globalement rien de bien différent, si ce\nn’est que Sass possède des solutions pour gérer la génération depuis votre GUI\n(",{"tag":"a","props":{"href":"https://github.com/hlb/SassSalon"},"children":["SassSalon"]},", ",{"tag":"a","props":{"href":"http://compass.kkbox.com/"},"children":["Compass.app"]}," ), utile pour des designers qui n’aiment\nsouvent pas les lignes de commandes…"]},"\n",{"tag":"p","children":["Ensuite il faut rentrer un peu dans le détail des fonctionnalités offertes, mais\nje vous laisse prendre le temps de faire ça par vous même en consultant les\ndocs."]},"\n",{"tag":"p","children":["Sass a une base qui a du vécu et 2 syntaxes. LESS, lui, me parait un peu light,\net je n’aime pas trop le coup du compilateur js. Quant à Stylus je n’ai pas trop\npris le temps de faire des tests, mais il est encore assez jeune, quoique\nprometteur."]},"\n",{"tag":"p","children":["Pour l’instant j’utilise Sass (avec la syntaxe scss), ma principale raison est\nle framework ",{"tag":"a","props":{"href":"http://beta.compass-style.org/"},"children":["Compass"]}," qu’on peut rajouter en surcouche. Sass et Compass\nreprésente une grosse communauté et à eux 2 un bon gros tas de fonctions. Je\nrentrerais un peu plus dans le détail avec Sass/Compass dans un prochain post."]},"\n",{"tag":"p","children":["Il me paraît aujourd’hui évident d’utiliser une de ces solutions et je ne suis\npas près de m’en passer (pas avant que CSS ne possède des variables et mixins en\ntout cas), surtout à notre époque où chaque nouvelle propriété amusante des CSS\nutilise un préfixe par navigateur (et peu donc vite devenir gerbant à\nl’utilisation)."]},"\n",{"tag":"p","children":[{"tag":"em","children":["En tout cas, il y’a du choix, alors passez à la vitesse supérieur avec vos CSS\n!"]}]},"\n",{"tag":"p","children":["Edit: Depuis j’ai publié d’autres articles relatifs, un plus détaillé sur ",{"tag":"a","props":{"href":"/blog/fonctions-variables-css-generer-ses-css-avec-sass-compass/"},"children":["la\nsolution Sass/Compass (et son installation) "]},"puis un autre sur ",{"tag":"a","props":{"href":"/blog/compass-app-application-pour-compiler-css-sass-compass/"},"children":["comment se\npasser des lignes de commandes avec Compass.app !"]}]}]}}