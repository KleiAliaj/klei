{"title":"Farewell CSS","headings":[{"level":2,"text":"CSS-in-JS, until we get something better","id":"css-in-js-until-we-get-something-better"},{"level":2,"text":"‚ÄúBut you don't know how to use CSS‚Äù","id":"but-you-dont-know-how-to-use-css"},{"level":2,"text":"Deprecating cssnext","id":"deprecating-cssnext"},{"level":2,"text":"What's next for me?","id":"whats-next-for-me"}],"date":"2018-05-28T00:00:00.000Z","tags":["css"],"body":{"tag":"div","children":[{"tag":"p","children":["I've been fighting with CSS long enough in production now that I don‚Äôt enjoy\nworking with it anymore unfortunately, so at least for now this my formal\nfarewell! ",{"tag":"a","props":{"href":"https://medium.com/@tjholowaychuk/farewell-node-js-4ba9e7f3e52b"},"children":["*"]}]},"\n",{"tag":"p","children":["CSS has been designed to style documents, not applications. Anyone that has\ntried to use CSS at scale knows how it requires too many restrictions and rules\nto make it work. In short, it's painful and not really a pleasure."]},"\n",{"tag":"p","children":["CSS selectors are the main problem we have to face with CSS. It's like global\nmutable variables. Because of how selectors works, it's very hard to know if\nremoving a piece of CSS is ok or not. There is still no way to write trustable\nscoped CSS. So yeah, you can use BEM, CSS modules and other fancy tools &\nmethodologies, but at the end of the day, those are just patches that require\nstrict methodologies and tooling. Not solution for the future."]},"\n",{"tag":"p","children":["Many have already talked & written about the limits of CSS for apps and the most\naccurate reference to me is still one of the first (from 2014)."]},"\n",{"tag":"p","children":[{"tag":"a","props":{"href":"http://blog.vjeux.com/2014/javascript/react-css-in-js-nationjs.html"},"children":["http://blog.vjeux.com/2014/javascript/react-css-in-js-nationjs.html"]}]},"\n",{"tag":"p","children":["To refresh your memory, here is the list of problems that you encounter when\nworking with CSS on apps"]},"\n",{"tag":"ul","children":["\n",{"tag":"li","children":["No local variables."]},"\n",{"tag":"li","children":["Implicit dependencies."]},"\n",{"tag":"li","children":["No dead code elimination."]},"\n",{"tag":"li","children":["No code minification."]},"\n",{"tag":"li","children":["No sharing of constants."]},"\n",{"tag":"li","children":["Non-deterministic resolution."]},"\n",{"tag":"li","children":["No isolation."]},"\n"]},"\n",{"tag":"p","children":["The way CSS is currently evolving won't fix anything."]},"\n",{"tag":"h2","props":{"id":"css-in-js-until-we-get-something-better"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#css-in-js-until-we-get-something-better"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"CSS-in-JS, until we get something better"]},"\n",{"tag":"p","children":["Meanwhile, CSS-in-JS is becoming clearly more and more popular as it can help to\navoid all those problems and also has some benefits:"]},"\n",{"tag":"ul","children":["\n",{"tag":"li","children":["Generates the minimum required CSS."]},"\n",{"tag":"li","children":["Offers good runtime performance."]},"\n",{"tag":"li","children":["Supports static and dynamic styles."]},"\n",{"tag":"li","children":["Helps to pre-render critical CSS."]},"\n"]},"\n",{"tag":"p","children":["At the end, at least for now on the web, we still use CSS, but as a low-level\nprimitive (like React is using the DOM). Just like any code we write ends up\nbeing compiled to a language that our computer will understand."]},"\n",{"tag":"p","children":["When relying on a good abstraction, you can write code similar to CSS (without\nselectors) that will work in other places, thanks to\n",{"tag":"a","props":{"href":"http://yogalayout.com"},"children":["Yoga"]},". Yoga is the solution used in\n",{"tag":"a","props":{"href":"http://facebook.github.io/react-native/"},"children":["React-Native"]}," and some others engines.\nYoga is just an example and you can probably find other alternatives like\n",{"tag":"a","props":{"href":"https://github.com/jordwalke/flex"},"children":["flex"]}," (a Yoga reimplementation in\n",{"tag":"a","props":{"href":"https://reasonml.github.io/"},"children":["Reason"]},")."]},"\n",{"tag":"p","children":["In addition to previous benefits, using this kind of solution also adds"]},"\n",{"tag":"ul","children":["\n",{"tag":"li","children":["Simple API and expressive subset of CSS."]},"\n",{"tag":"li","children":["Support for RTL layouts."]},"\n",{"tag":"li","children":["Easy pre-rendering of critical CSS (if your target compilation is the web)"]},"\n",{"tag":"li","children":["Statically type-checked styles ‚ô•Ô∏è."]},"\n"]},"\n",{"tag":"h2","props":{"id":"but-you-dont-know-how-to-use-css"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#but-you-dont-know-how-to-use-css"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"‚ÄúBut you don't know how to use CSS‚Äù"]},"\n",{"tag":"p","children":["For those that are going to say something like"]},"\n",{"tag":"blockquote","children":["\n",{"tag":"p","children":["But if you are smart, you will use cascading to your advantage"]},"\n"]},"\n",{"tag":"p","children":["Before saying anything like this, be sure that:"]},"\n",{"tag":"ul","children":["\n",{"tag":"li","children":["you haven't shipped one-shot projects only without having to maintain those on\nthe long run"]},"\n",{"tag":"li","children":["you actually had more than 1000 CSS selectors in production for a single\nproject"]},"\n"]},"\n",{"tag":"p","children":["Using CSS for small projects is probably ok, but it's not for medium and large\nwebsites/apps. Please watch and read about the motivations of CSS-in-JS until we\nare convinced. And if you are not... üôÉ"]},"\n",{"tag":"h2","props":{"id":"deprecating-cssnext"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#deprecating-cssnext"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"Deprecating cssnext"]},"\n",{"tag":"p","children":["For these reasons, I will only use CSS when I will use HTML directly, so that\nmeans 2 times per year when I do a real quick landing page."]},"\n",{"tag":"p","children":["I really believe that CSS will become a low level primitive, a target for\ncompilation, and nothing more in the near future. And for a far future, it may\neven become obsolete and not used."]},"\n",{"tag":"p","children":["This is why I am ",{"tag":"a","props":{"href":"/blog/deprecating-cssnext/"},"children":["deprecating cssnext"]}," as of today."]},"\n",{"tag":"h2","props":{"id":"whats-next-for-me"},"children":[{"tag":"a","props":{"aria-hidden":"true","href":"#whats-next-for-me"},"children":[{"tag":"span","props":{"class":"icon icon-link"}}]},"What's next for me?"]},"\n",{"tag":"p","children":["I work with the React ecosystem these days and I am already happy with\n",{"tag":"a","props":{"href":"http://facebook.github.io/react-native/docs/stylesheet.html"},"children":["React Native StyleSheet"]},"\nAPI (that works on ",{"tag":"a","props":{"href":"https://github.com/necolas/react-native-web"},"children":["the web"]}," too)."]},"\n",{"tag":"p","children":["(If you ask me ",{"tag":"em","children":["\"what about media queries and pseudo elements?\""]},", I don't need\nthose. I think media queries are not good enough (element queries could be a\nthing I would use tho) and pseudo elements are clearly oriented for document\nstyling. See also\n",{"tag":"a","props":{"href":"https://github.com/necolas/react-native-web/blob/master/website/guides/style.md#faqs"},"children":["react-native-web Style FAQ"]},"."]},"\n",{"tag":"p","children":["Currently, I am even using RN StyleSheet API via\n",{"tag":"a","props":{"href":"https://reasonml.github.io/"},"children":["Reason"]}," and\n",{"tag":"a","props":{"href":"https://github.com/reasonml-community/bs-react-native"},"children":["bs-react-native"]}," that\nbrings me strong static typed validation. No more debugging for a stupid typo."]},"\n",{"tag":"p","children":["I also look forward to\n",{"tag":"a","props":{"href":"https://github.com/vincentriemer/react-native-dom"},"children":["react-native-dom"]},"."]},"\n",{"tag":"figure","props":{"class":"flex-media--unknown"},"children":["\n  ",{"tag":"img","props":{"class":"flex-media__item","src":"/media/yoga-in-webassembly.jpg"}},"\n  ",{"tag":"figcaption","children":[{"tag":"a","props":{"href":"https://twitter.com/MoOx/status/997119336400777217"},"children":["twitter.com/MoOx/status/997119336400777217"]}]},"\n"]}]}}