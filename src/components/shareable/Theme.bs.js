// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ReactNative from "react-native";
import * as Predefined$ReactMultiversal from "react-multiversal/src/Predefined.bs.js";

var colors_light = {
  back: "#fff",
  backDark: "#f2f2f7",
  main: Predefined$ReactMultiversal.Colors.Ios.light.indigo,
  text: "#111",
  textLight1: Predefined$ReactMultiversal.Colors.Ios.light.gray,
  textLight2: Predefined$ReactMultiversal.Colors.Ios.light.gray2,
  textOnDarkLight: "rgba(0,0,0,0.5)",
  textOnMain: "#fff"
};

var colors_dark = {
  back: Predefined$ReactMultiversal.Colors.Ios.dark.gray6,
  backDark: "#000",
  main: Predefined$ReactMultiversal.Colors.Ios.dark.indigo,
  text: "rgba(255,255,255,0.98)",
  textLight1: Predefined$ReactMultiversal.Colors.Ios.light.gray,
  textLight2: Predefined$ReactMultiversal.Colors.Ios.light.gray2,
  textOnDarkLight: "rgba(255,255,255,0.5)",
  textOnMain: "rgba(255,255,255,0.98)"
};

var colors = {
  light: colors_light,
  dark: colors_dark
};

var Default = {
  colors: colors
};

var htmlKey = "react-multiversal";

var htmlId = "react-multiversal--root";

var htmlCssId = "react-multiversal-css";

function MakeTheme(Th) {
  var webCss = {
    contents: ""
  };
  var colorsLight_systemBlue = Predefined$ReactMultiversal.Colors.Ios.light.blue;
  var colorsLight_systemGreen = Predefined$ReactMultiversal.Colors.Ios.light.green;
  var colorsLight_systemIndigo = Predefined$ReactMultiversal.Colors.Ios.light.indigo;
  var colorsLight_systemOrange = Predefined$ReactMultiversal.Colors.Ios.light.orange;
  var colorsLight_systemPink = Predefined$ReactMultiversal.Colors.Ios.light.pink;
  var colorsLight_systemPurple = Predefined$ReactMultiversal.Colors.Ios.light.purple;
  var colorsLight_systemRed = Predefined$ReactMultiversal.Colors.Ios.light.red;
  var colorsLight_systemTeal = Predefined$ReactMultiversal.Colors.Ios.light.teal;
  var colorsLight_systemYellow = Predefined$ReactMultiversal.Colors.Ios.light.yellow;
  var colorsLight_systemGray = Predefined$ReactMultiversal.Colors.Ios.light.gray;
  var colorsLight_systemGray2 = Predefined$ReactMultiversal.Colors.Ios.light.gray2;
  var colorsLight_systemGray3 = Predefined$ReactMultiversal.Colors.Ios.light.gray3;
  var colorsLight_systemGray4 = Predefined$ReactMultiversal.Colors.Ios.light.gray4;
  var colorsLight_systemGray5 = Predefined$ReactMultiversal.Colors.Ios.light.gray5;
  var colorsLight_systemGray6 = Predefined$ReactMultiversal.Colors.Ios.light.gray6;
  var colorsLight_back = Th.colors.light.back;
  var colorsLight_backDark = Th.colors.light.backDark;
  var colorsLight_main = Th.colors.light.main;
  var colorsLight_text = Th.colors.light.text;
  var colorsLight_textLight1 = Th.colors.light.textLight1;
  var colorsLight_textLight2 = Th.colors.light.textLight2;
  var colorsLight_textOnDarkLight = Th.colors.light.textOnDarkLight;
  var colorsLight_textOnMain = Th.colors.light.textOnMain;
  var colorsLight = {
    systemBlue: colorsLight_systemBlue,
    systemGreen: colorsLight_systemGreen,
    systemIndigo: colorsLight_systemIndigo,
    systemOrange: colorsLight_systemOrange,
    systemPink: colorsLight_systemPink,
    systemPurple: colorsLight_systemPurple,
    systemRed: colorsLight_systemRed,
    systemTeal: colorsLight_systemTeal,
    systemYellow: colorsLight_systemYellow,
    systemGray: colorsLight_systemGray,
    systemGray2: colorsLight_systemGray2,
    systemGray3: colorsLight_systemGray3,
    systemGray4: colorsLight_systemGray4,
    systemGray5: colorsLight_systemGray5,
    systemGray6: colorsLight_systemGray6,
    back: colorsLight_back,
    backDark: colorsLight_backDark,
    main: colorsLight_main,
    text: colorsLight_text,
    textLight1: colorsLight_textLight1,
    textLight2: colorsLight_textLight2,
    textOnDarkLight: colorsLight_textOnDarkLight,
    textOnMain: colorsLight_textOnMain
  };
  var colorsDark_systemBlue = Predefined$ReactMultiversal.Colors.Ios.dark.blue;
  var colorsDark_systemGreen = Predefined$ReactMultiversal.Colors.Ios.dark.green;
  var colorsDark_systemIndigo = Predefined$ReactMultiversal.Colors.Ios.dark.indigo;
  var colorsDark_systemOrange = Predefined$ReactMultiversal.Colors.Ios.dark.orange;
  var colorsDark_systemPink = Predefined$ReactMultiversal.Colors.Ios.dark.pink;
  var colorsDark_systemPurple = Predefined$ReactMultiversal.Colors.Ios.dark.purple;
  var colorsDark_systemRed = Predefined$ReactMultiversal.Colors.Ios.dark.red;
  var colorsDark_systemTeal = Predefined$ReactMultiversal.Colors.Ios.dark.teal;
  var colorsDark_systemYellow = Predefined$ReactMultiversal.Colors.Ios.dark.yellow;
  var colorsDark_systemGray = Predefined$ReactMultiversal.Colors.Ios.dark.gray;
  var colorsDark_systemGray2 = Predefined$ReactMultiversal.Colors.Ios.dark.gray2;
  var colorsDark_systemGray3 = Predefined$ReactMultiversal.Colors.Ios.dark.gray3;
  var colorsDark_systemGray4 = Predefined$ReactMultiversal.Colors.Ios.dark.gray4;
  var colorsDark_systemGray5 = Predefined$ReactMultiversal.Colors.Ios.dark.gray5;
  var colorsDark_systemGray6 = Predefined$ReactMultiversal.Colors.Ios.dark.gray6;
  var colorsDark_back = Th.colors.dark.back;
  var colorsDark_backDark = Th.colors.dark.backDark;
  var colorsDark_main = Th.colors.dark.main;
  var colorsDark_text = Th.colors.dark.text;
  var colorsDark_textLight1 = Th.colors.dark.textLight1;
  var colorsDark_textLight2 = Th.colors.dark.textLight2;
  var colorsDark_textOnDarkLight = Th.colors.dark.textOnDarkLight;
  var colorsDark_textOnMain = Th.colors.dark.textOnMain;
  var colorsDark = {
    systemBlue: colorsDark_systemBlue,
    systemGreen: colorsDark_systemGreen,
    systemIndigo: colorsDark_systemIndigo,
    systemOrange: colorsDark_systemOrange,
    systemPink: colorsDark_systemPink,
    systemPurple: colorsDark_systemPurple,
    systemRed: colorsDark_systemRed,
    systemTeal: colorsDark_systemTeal,
    systemYellow: colorsDark_systemYellow,
    systemGray: colorsDark_systemGray,
    systemGray2: colorsDark_systemGray2,
    systemGray3: colorsDark_systemGray3,
    systemGray4: colorsDark_systemGray4,
    systemGray5: colorsDark_systemGray5,
    systemGray6: colorsDark_systemGray6,
    back: colorsDark_back,
    backDark: colorsDark_backDark,
    main: colorsDark_main,
    text: colorsDark_text,
    textLight1: colorsDark_textLight1,
    textLight2: colorsDark_textLight2,
    textOnDarkLight: colorsDark_textOnDarkLight,
    textOnMain: colorsDark_textOnMain
  };
  var colorsDynamic;
  if (ReactNative.Platform.OS === "web") {
    var prefix = "--" + htmlKey + "-theme-";
    webCss.contents = "\n    ." + htmlId + " {\n      " + prefix + "systemBlue: " + Predefined$ReactMultiversal.Colors.Ios.light.blue + ";\n      " + prefix + "systemGreen: " + Predefined$ReactMultiversal.Colors.Ios.light.green + ";\n      " + prefix + "systemIndigo: " + Predefined$ReactMultiversal.Colors.Ios.light.indigo + ";\n      " + prefix + "systemOrange: " + Predefined$ReactMultiversal.Colors.Ios.light.orange + ";\n      " + prefix + "systemPink: " + Predefined$ReactMultiversal.Colors.Ios.light.pink + ";\n      " + prefix + "systemPurple: " + Predefined$ReactMultiversal.Colors.Ios.light.purple + ";\n      " + prefix + "systemRed: " + Predefined$ReactMultiversal.Colors.Ios.light.red + ";\n      " + prefix + "systemTeal: " + Predefined$ReactMultiversal.Colors.Ios.light.teal + ";\n      " + prefix + "systemYellow: " + Predefined$ReactMultiversal.Colors.Ios.light.yellow + ";\n      " + prefix + "systemGray: " + Predefined$ReactMultiversal.Colors.Ios.light.gray + ";\n      " + prefix + "systemGray2: " + Predefined$ReactMultiversal.Colors.Ios.light.gray2 + ";\n      " + prefix + "systemGray3: " + Predefined$ReactMultiversal.Colors.Ios.light.gray3 + ";\n      " + prefix + "systemGray4: " + Predefined$ReactMultiversal.Colors.Ios.light.gray4 + ";\n      " + prefix + "systemGray5: " + Predefined$ReactMultiversal.Colors.Ios.light.gray5 + ";\n      " + prefix + "systemGray6: " + Predefined$ReactMultiversal.Colors.Ios.light.gray6 + ";\n      " + prefix + "back: " + Th.colors.light.back + ";\n      " + prefix + "backDark: " + Th.colors.light.backDark + ";\n      " + prefix + "main: " + Th.colors.light.main + ";\n      " + prefix + "text: " + Th.colors.light.text + ";\n      " + prefix + "textLight1: " + Th.colors.light.textLight1 + ";\n      " + prefix + "textLight2: " + Th.colors.light.textLight2 + ";\n      " + prefix + "textOnDarkLight: " + Th.colors.light.textOnDarkLight + ";\n      " + prefix + "textOnMain: " + Th.colors.light.textOnMain + ";\n    }\n    @media (prefers-color-scheme: dark) { ." + htmlId + " {\n      " + prefix + "systemBlue: " + Predefined$ReactMultiversal.Colors.Ios.dark.blue + ";\n      " + prefix + "systemGreen: " + Predefined$ReactMultiversal.Colors.Ios.dark.green + ";\n      " + prefix + "systemIndigo: " + Predefined$ReactMultiversal.Colors.Ios.dark.indigo + ";\n      " + prefix + "systemOrange: " + Predefined$ReactMultiversal.Colors.Ios.dark.orange + ";\n      " + prefix + "systemPink: " + Predefined$ReactMultiversal.Colors.Ios.dark.pink + ";\n      " + prefix + "systemPurple: " + Predefined$ReactMultiversal.Colors.Ios.dark.purple + ";\n      " + prefix + "systemRed: " + Predefined$ReactMultiversal.Colors.Ios.dark.red + ";\n      " + prefix + "systemTeal: " + Predefined$ReactMultiversal.Colors.Ios.dark.teal + ";\n      " + prefix + "systemYellow: " + Predefined$ReactMultiversal.Colors.Ios.dark.yellow + ";\n      " + prefix + "systemGray: " + Predefined$ReactMultiversal.Colors.Ios.dark.gray + ";\n      " + prefix + "systemGray2: " + Predefined$ReactMultiversal.Colors.Ios.dark.gray2 + ";\n      " + prefix + "systemGray3: " + Predefined$ReactMultiversal.Colors.Ios.dark.gray3 + ";\n      " + prefix + "systemGray4: " + Predefined$ReactMultiversal.Colors.Ios.dark.gray4 + ";\n      " + prefix + "systemGray5: " + Predefined$ReactMultiversal.Colors.Ios.dark.gray5 + ";\n      " + prefix + "systemGray6: " + Predefined$ReactMultiversal.Colors.Ios.dark.gray6 + ";\n      " + prefix + "back: " + Th.colors.dark.back + ";\n      " + prefix + "backDark: " + Th.colors.dark.backDark + ";\n      " + prefix + "main: " + Th.colors.dark.main + ";\n      " + prefix + "text: " + Th.colors.dark.text + ";\n      " + prefix + "textLight1: " + Th.colors.dark.textLight1 + ";\n      " + prefix + "textLight2: " + Th.colors.dark.textLight2 + ";\n      " + prefix + "textOnDarkLight: " + Th.colors.dark.textOnDarkLight + ";\n      " + prefix + "textOnMain: " + Th.colors.dark.textOnMain + ";\n    } }\n    ";
    colorsDynamic = {
      systemBlue: "var(" + prefix + "systemBlue)",
      systemGreen: "var(" + prefix + "systemGreen)",
      systemIndigo: "var(" + prefix + "systemIndigo)",
      systemOrange: "var(" + prefix + "systemOrange)",
      systemPink: "var(" + prefix + "systemPink)",
      systemPurple: "var(" + prefix + "systemPurple)",
      systemRed: "var(" + prefix + "systemRed)",
      systemTeal: "var(" + prefix + "systemTeal)",
      systemYellow: "var(" + prefix + "systemYellow)",
      systemGray: "var(" + prefix + "systemGray)",
      systemGray2: "var(" + prefix + "systemGray2)",
      systemGray3: "var(" + prefix + "systemGray3)",
      systemGray4: "var(" + prefix + "systemGray4)",
      systemGray5: "var(" + prefix + "systemGray5)",
      systemGray6: "var(" + prefix + "systemGray6)",
      back: "var(" + prefix + "back)",
      backDark: "var(" + prefix + "backDark)",
      main: "var(" + prefix + "main)",
      text: "var(" + prefix + "text)",
      textLight1: "var(" + prefix + "textLight1)",
      textLight2: "var(" + prefix + "textLight2)",
      textOnDarkLight: "var(" + prefix + "textOnDarkLight)",
      textOnMain: "var(" + prefix + "textOnMain)"
    };
  } else {
    colorsDynamic = colorsLight;
  }
  var stylesDynamic = ReactNative.StyleSheet.create({
        back: {
          backgroundColor: colorsDynamic.back
        },
        backDark: {
          backgroundColor: colorsDynamic.backDark
        },
        backGray: {
          backgroundColor: colorsDynamic.systemGray
        },
        backGray2: {
          backgroundColor: colorsDynamic.systemGray2
        },
        backGray3: {
          backgroundColor: colorsDynamic.systemGray3
        },
        backGray4: {
          backgroundColor: colorsDynamic.systemGray4
        },
        backGray5: {
          backgroundColor: colorsDynamic.systemGray5
        },
        backGray6: {
          backgroundColor: colorsDynamic.systemGray6
        },
        backMain: {
          backgroundColor: colorsDynamic.main
        },
        separatorLightOnBack: {
          backgroundColor: colorsDynamic.systemGray4
        },
        separatorOnBack: {
          backgroundColor: colorsDynamic.systemGray3
        },
        text: {
          color: colorsDynamic.text
        },
        textBlue: {
          color: colorsDynamic.systemBlue
        },
        textGray: {
          color: colorsDynamic.systemGray
        },
        textGray2: {
          color: colorsDynamic.systemGray2
        },
        textGray3: {
          color: colorsDynamic.systemGray3
        },
        textGray4: {
          color: colorsDynamic.systemGray4
        },
        textGray5: {
          color: colorsDynamic.systemGray5
        },
        textGray6: {
          color: colorsDynamic.systemGray6
        },
        textGreen: {
          color: colorsDynamic.systemGreen
        },
        textIndigo: {
          color: colorsDynamic.systemIndigo
        },
        textLight1: {
          color: colorsDynamic.textLight1
        },
        textLight2: {
          color: colorsDynamic.textLight2
        },
        textMain: {
          color: colorsDynamic.main
        },
        textOnDarkLight: {
          color: colorsDynamic.textOnDarkLight
        },
        textOnMain: {
          color: colorsDynamic.textOnMain
        },
        textOrange: {
          color: colorsDynamic.systemOrange
        },
        textPink: {
          color: colorsDynamic.systemPink
        },
        textPurple: {
          color: colorsDynamic.systemPurple
        },
        textRed: {
          color: colorsDynamic.systemRed
        },
        textTeal: {
          color: colorsDynamic.systemTeal
        },
        textYellow: {
          color: colorsDynamic.systemYellow
        }
      });
  var stylesLight = ReactNative.StyleSheet.create({
        back: {
          backgroundColor: colorsLight_back
        },
        backDark: {
          backgroundColor: colorsLight_backDark
        },
        backGray: {
          backgroundColor: colorsLight_systemGray
        },
        backGray2: {
          backgroundColor: colorsLight_systemGray2
        },
        backGray3: {
          backgroundColor: colorsLight_systemGray3
        },
        backGray4: {
          backgroundColor: colorsLight_systemGray4
        },
        backGray5: {
          backgroundColor: colorsLight_systemGray5
        },
        backGray6: {
          backgroundColor: colorsLight_systemGray6
        },
        backMain: {
          backgroundColor: colorsLight_main
        },
        separatorLightOnBack: {
          backgroundColor: colorsLight_systemGray4
        },
        separatorOnBack: {
          backgroundColor: colorsLight_systemGray3
        },
        text: {
          color: colorsLight_text
        },
        textBlue: {
          color: colorsLight_systemBlue
        },
        textGray: {
          color: colorsLight_systemGray
        },
        textGray2: {
          color: colorsLight_systemGray2
        },
        textGray3: {
          color: colorsLight_systemGray3
        },
        textGray4: {
          color: colorsLight_systemGray4
        },
        textGray5: {
          color: colorsLight_systemGray5
        },
        textGray6: {
          color: colorsLight_systemGray6
        },
        textGreen: {
          color: colorsLight_systemGreen
        },
        textIndigo: {
          color: colorsLight_systemIndigo
        },
        textLight1: {
          color: colorsLight_textLight1
        },
        textLight2: {
          color: colorsLight_textLight2
        },
        textMain: {
          color: colorsLight_main
        },
        textOnDarkLight: {
          color: colorsLight_textOnDarkLight
        },
        textOnMain: {
          color: colorsLight_textOnMain
        },
        textOrange: {
          color: colorsLight_systemOrange
        },
        textPink: {
          color: colorsLight_systemPink
        },
        textPurple: {
          color: colorsLight_systemPurple
        },
        textRed: {
          color: colorsLight_systemRed
        },
        textTeal: {
          color: colorsLight_systemTeal
        },
        textYellow: {
          color: colorsLight_systemYellow
        }
      });
  var stylesDark = ReactNative.StyleSheet.create({
        back: {
          backgroundColor: colorsDark_back
        },
        backDark: {
          backgroundColor: colorsDark_backDark
        },
        backGray: {
          backgroundColor: colorsDark_systemGray
        },
        backGray2: {
          backgroundColor: colorsDark_systemGray2
        },
        backGray3: {
          backgroundColor: colorsDark_systemGray3
        },
        backGray4: {
          backgroundColor: colorsDark_systemGray4
        },
        backGray5: {
          backgroundColor: colorsDark_systemGray5
        },
        backGray6: {
          backgroundColor: colorsDark_systemGray6
        },
        backMain: {
          backgroundColor: colorsDark_main
        },
        separatorLightOnBack: {
          backgroundColor: colorsDark_systemGray5
        },
        separatorOnBack: {
          backgroundColor: colorsDark_systemGray4
        },
        text: {
          color: colorsDark_text
        },
        textBlue: {
          color: colorsDark_systemBlue
        },
        textGray: {
          color: colorsDark_systemGray
        },
        textGray2: {
          color: colorsDark_systemGray2
        },
        textGray3: {
          color: colorsDark_systemGray3
        },
        textGray4: {
          color: colorsDark_systemGray4
        },
        textGray5: {
          color: colorsDark_systemGray5
        },
        textGray6: {
          color: colorsDark_systemGray6
        },
        textGreen: {
          color: colorsDark_systemGreen
        },
        textIndigo: {
          color: colorsDark_systemIndigo
        },
        textLight1: {
          color: colorsDark_textLight1
        },
        textLight2: {
          color: colorsDark_textLight2
        },
        textMain: {
          color: colorsDark_main
        },
        textOnDarkLight: {
          color: colorsDark_textOnDarkLight
        },
        textOnMain: {
          color: colorsDark_textOnMain
        },
        textOrange: {
          color: colorsDark_systemOrange
        },
        textPink: {
          color: colorsDark_systemPink
        },
        textPurple: {
          color: colorsDark_systemPurple
        },
        textRed: {
          color: colorsDark_systemRed
        },
        textTeal: {
          color: colorsDark_systemTeal
        },
        textYellow: {
          color: colorsDark_systemYellow
        }
      });
  var themeLight = {
    mode: "light",
    styles: stylesLight,
    colors: colorsLight
  };
  var themeDark = {
    mode: "dark",
    styles: stylesDark,
    colors: colorsDark
  };
  var useTheme = function (currentModeOpt, param) {
    var currentMode = currentModeOpt !== undefined ? currentModeOpt : "auto";
    var colorScheme = ReactNative.useColorScheme();
    var mode = currentMode === "dark" || !(currentMode === "light" || !(colorScheme !== null && colorScheme === "dark")) ? "dark" : "light";
    if (currentMode === "auto" && ReactNative.Platform.OS === "web") {
      return {
              mode: mode,
              styles: stylesDynamic,
              colors: colorsDynamic
            };
    } else if (mode === "light") {
      return themeLight;
    } else {
      return themeDark;
    }
  };
  var getThemeStyleSheet = function (param) {
    return React.createElement("style", {
                id: htmlCssId,
                dangerouslySetInnerHTML: {
                  __html: webCss.contents
                }
              });
  };
  var getThemeHtmlId = function (param) {
    return htmlId;
  };
  return {
          colors: Th.colors,
          webCss: webCss,
          colorsLight: colorsLight,
          colorsDark: colorsDark,
          colorsDynamic: colorsDynamic,
          stylesDynamic: stylesDynamic,
          stylesLight: stylesLight,
          stylesDark: stylesDark,
          themeLight: themeLight,
          themeDark: themeDark,
          useTheme: useTheme,
          getThemeStyleSheet: getThemeStyleSheet,
          getThemeHtmlId: getThemeHtmlId
        };
}

var Radius = {
  button: 10,
  card: 6
};

function barsStyle(theme, barStyle) {
  if (theme === "light") {
    if (barStyle === "lightContent") {
      return "light-content";
    } else {
      return "dark-content";
    }
  } else if (barStyle === "lightContent") {
    return "dark-content";
  } else {
    return "light-content";
  }
}

function barStyle(theme, barStyle$1) {
  if (theme === "light") {
    if (barStyle$1 === "lightContent") {
      return "lightContent";
    } else {
      return "darkContent";
    }
  } else if (barStyle$1 === "lightContent") {
    return "darkContent";
  } else {
    return "lightContent";
  }
}

var isFormSheetSupported = ReactNative.Platform.OS === "ios" && ReactNative.Platform.Version > "13";

var formSheetSafeArea = isFormSheetSupported ? false : true;

var StatusBar = {
  barsStyle: barsStyle,
  barStyle: barStyle,
  isFormSheetSupported: isFormSheetSupported,
  formSheetSafeArea: formSheetSafeArea
};

export {
  Default ,
  htmlKey ,
  htmlId ,
  htmlCssId ,
  MakeTheme ,
  Radius ,
  StatusBar ,
  
}
/* isFormSheetSupported Not a pure module */
