// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Consts from "../Consts.bs.js";
import * as SVGLogo from "../../assets/SVGs/components/SVGLogo.bs.js";
import * as TextLink from "./TextLink.bs.js";
import * as ViewLink from "./ViewLink.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as SVGContact from "../../assets/SVGs/components/SVGContact.bs.js";
import * as Router from "next/router";
import * as ReactNative from "react-native";
import * as Style$ReactNative from "rescript-react-native/src/apis/Style.bs.js";
import * as Spacer$ReactMultiversal from "react-multiversal/src/Spacer.bs.js";
import * as GradientLinearBackground from "./shareable/GradientLinearBackground.bs.js";
import * as Container$ReactMultiversal from "react-multiversal/src/Container.bs.js";
import * as SVGArrowRoundedWithTailTop from "../../assets/SVGs/components/SVGArrowRoundedWithTailTop.bs.js";
import * as Predefined$ReactMultiversal from "react-multiversal/src/Predefined.bs.js";
import * as ButtonOutlined$ReactMultiversal from "react-multiversal/src/ButtonOutlined.bs.js";

var styles = ReactNative.StyleSheet.create({
      barWrapper: {
        shadowColor: "#000",
        shadowOffset: {
          height: 5,
          width: 0
        },
        shadowOpacity: 0.15,
        shadowRadius: 20,
        zIndex: 1
      },
      bar: {
        alignItems: "center",
        flexDirection: "row",
        flexWrap: "wrap",
        justifyContent: "space-between"
      },
      logo: {
        alignItems: "center",
        flexDirection: "row",
        paddingHorizontal: 10,
        position: "relative",
        zIndex: 1
      },
      logoText: {
        color: Predefined$ReactMultiversal.Colors.black,
        fontSize: 26,
        fontWeight: "700"
      },
      icons: {
        flexDirection: "row"
      },
      icon: {
        fontSize: 12,
        alignItems: "center",
        display: "flex",
        flexGrow: 1,
        flexShrink: 0,
        justifyContent: "center",
        paddingHorizontal: 12,
        paddingVertical: 6
      },
      linkContainer: {
        flexDirection: "row"
      },
      link: {
        color: Predefined$ReactMultiversal.Colors.black,
        fontSize: 16,
        lineHeight: 18 * 1.7,
        padding: 10
      },
      linkActive: {
        textDecorationLine: "underline",
        textDecorationStyle: "solid"
      }
    });

function HeaderLarge(Props) {
  var match = Router.useRouter();
  return React.createElement(GradientLinearBackground.make, {
              style: Predefined$ReactMultiversal.styles.flex1,
              stops: [
                {
                  offset: Style$ReactNative.pct(0),
                  stopColor: "#01093C",
                  stopOpacity: "1"
                },
                {
                  offset: Style$ReactNative.pct(100),
                  stopColor: "#060C4E",
                  stopOpacity: "1"
                }
              ],
              children: React.createElement(Container$ReactMultiversal.make, {
                    wrapperStyle: styles.barWrapper,
                    style: styles.bar,
                    children: null
                  }, React.createElement(ViewLink.make, {
                        href: "/",
                        style: styles.logo,
                        children: null
                      }, React.createElement(SVGLogo.make, {
                            width: 24,
                            height: 24,
                            fill: Predefined$ReactMultiversal.Colors.black
                          }), React.createElement(Spacer$ReactMultiversal.make, {
                            size: /* XS */5
                          }), React.createElement(ReactNative.Text, {
                            children: Consts.title,
                            style: styles.logoText
                          }), React.createElement(Spacer$ReactMultiversal.make, {
                            size: /* XS */5
                          })), React.createElement(ReactNative.View, {
                        style: styles.linkContainer,
                        children: Belt_Array.map(Consts.menuLinks, (function (item) {
                                return React.createElement(TextLink.make, {
                                            activeStyle: styles.linkActive,
                                            children: item.text,
                                            href: item.link,
                                            style: styles.link,
                                            key: item.link
                                          });
                              }))
                      }), match.asPath.startsWith("/contact") ? React.createElement("a", {
                          style: {
                            textDecoration: "none"
                          },
                          href: "/MaximeThirouin.vcf"
                        }, React.createElement(ButtonOutlined$ReactMultiversal.make, {
                              round: true,
                              color: Predefined$ReactMultiversal.Colors.Ios.light.pink,
                              horizontalSpace: /* S */4,
                              verticalSpace: /* XXS */6,
                              children: null
                            }, React.createElement(ButtonOutlined$ReactMultiversal.$$Text.make, {
                                  color: Predefined$ReactMultiversal.Colors.white,
                                  children: "Save"
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* XS */5
                                }), React.createElement(SVGContact.make, {
                                  width: 20,
                                  height: 20,
                                  fill: Consts.Colors.light
                                }))) : React.createElement(ViewLink.make, {
                          href: "/contact/",
                          children: React.createElement(ButtonOutlined$ReactMultiversal.make, {
                                round: true,
                                color: Predefined$ReactMultiversal.Colors.Ios.light.blue,
                                horizontalSpace: /* S */4,
                                verticalSpace: /* XXS */6,
                                children: null
                              }, React.createElement(ButtonOutlined$ReactMultiversal.$$Text.make, {
                                    color: Predefined$ReactMultiversal.Colors.white,
                                    children: "Get in touch"
                                  }), React.createElement(Spacer$ReactMultiversal.make, {
                                    size: /* XS */5
                                  }), React.createElement(SVGArrowRoundedWithTailTop.make, {
                                    width: 20,
                                    height: 20,
                                    fill: Predefined$ReactMultiversal.Colors.white
                                  }))
                        }))
            });
}

var make = HeaderLarge;

var $$default = HeaderLarge;

export {
  styles ,
  make ,
  $$default ,
  $$default as default,
  
}
/* styles Not a pure module */
