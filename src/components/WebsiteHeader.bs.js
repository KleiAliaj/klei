// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Avatar from "./Avatar.bs.js";
import * as Consts from "../Consts.bs.js";
import * as SVGLogo from "../../assets/SVGs/components/SVGLogo.bs.js";
import * as SVGEmail from "../../assets/SVGs/components/SVGEmail.bs.js";
import * as TextLink from "./TextLink.bs.js";
import * as ViewLink from "./ViewLink.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as SocialIcons from "./SocialIcons.bs.js";
import * as ReactNative from "react-native";
import * as WindowSizeFilter from "./WindowSizeFilter.bs.js";
import * as Style$ReactNative from "rescript-react-native/src/apis/Style.bs.js";
import * as Spacer$ReactMultiversal from "react-multiversal/src/Spacer.bs.js";
import * as Container$ReactMultiversal from "react-multiversal/src/Container.bs.js";
import * as Predefined$ReactMultiversal from "react-multiversal/src/Predefined.bs.js";
import * as SpacedView$ReactMultiversal from "react-multiversal/src/SpacedView.bs.js";
import * as TinyColor$RescriptTinycolor from "rescript-tinycolor/src/TinyColor.bs.js";

var styles = ReactNative.StyleSheet.create({
      barWrapper: {
        overflow: "visible",
        zIndex: 1
      },
      bar: {
        alignItems: "center",
        flexDirection: "row",
        flexWrap: "wrap",
        justifyContent: "space-between"
      },
      logo: Object.assign({}, {
            alignItems: "center",
            flexDirection: "row",
            paddingHorizontal: 10,
            position: "relative",
            zIndex: 1
          }, {
            filter: "drop-shadow(-2px 0 0 cyan) drop-shadow(2px 0 0 red) saturate(0.75)"
          }),
      logoText: {
        color: Predefined$ReactMultiversal.Colors.white,
        fontFamily: "Arial, sans-serif",
        fontSize: 28,
        fontWeight: "700",
        lineHeight: 28,
        marginBottom: Style$ReactNative.pct(4)
      },
      icons: {
        flexDirection: "row"
      },
      icon: {
        padding: 8
      },
      linkContainer: {
        flexDirection: "row"
      },
      link: {
        color: Predefined$ReactMultiversal.Colors.white,
        fontSize: 16,
        fontWeight: "500",
        lineHeight: 16 * 1.7,
        padding: 10
      },
      linkActive: Object.assign({}, {
            borderBottomColor: Belt_Option.getWithDefault(Belt_Option.map(TinyColor$RescriptTinycolor.makeFromString(Predefined$ReactMultiversal.Colors.white), (function (c) {
                        return TinyColor$RescriptTinycolor.setAlpha(0.25, c).toString();
                      })), Predefined$ReactMultiversal.Colors.white),
            borderBottomWidth: 1.5,
            borderStyle: "solid"
          }, {
            filter: "drop-shadow(0 0 6px cyan)"
          })
    });

function WebsiteHeader(Props) {
  var match = React.useState(function () {
        return false;
      });
  var isProfileOpen_set = match[1];
  var isProfileOpen = match[0];
  return React.createElement(ReactNative.View, {
              style: [{
                  zIndex: 10
                }],
              children: React.createElement(Container$ReactMultiversal.make, {
                    wrapperStyle: styles.barWrapper,
                    children: React.createElement(SpacedView$ReactMultiversal.make, {
                          vertical: /* S */4,
                          style: styles.bar,
                          children: null
                        }, React.createElement(ViewLink.make, {
                              href: "/",
                              style: styles.logo,
                              children: null
                            }, React.createElement(SVGLogo.make, {
                                  width: 36,
                                  height: 36,
                                  fill: Predefined$ReactMultiversal.Colors.white
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* M */3
                                }), React.createElement(ReactNative.Text, {
                                  children: Consts.title,
                                  style: styles.logoText
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* XS */5
                                })), React.createElement(WindowSizeFilter.MMin.make, {
                              children: React.createElement(ReactNative.View, {
                                    style: styles.linkContainer,
                                    children: Belt_Array.map(Consts.menuLinks, (function (item) {
                                            return React.createElement(TextLink.make, {
                                                        activeStyle: [styles.linkActive],
                                                        children: item.text,
                                                        href: item.link,
                                                        style: styles.link,
                                                        key: item.link
                                                      });
                                          }))
                                  })
                            }), React.createElement(ReactNative.Pressable, {
                              children: (function (param) {
                                  return React.createElement(ReactNative.View, {
                                              style: {
                                                cursor: "pointer"
                                              },
                                              children: null
                                            }, React.createElement(ReactNative.View, {
                                                  style: {
                                                    bottom: -12,
                                                    left: -12,
                                                    position: "absolute",
                                                    right: -12,
                                                    top: -12
                                                  },
                                                  children: React.createElement("svg", {
                                                        version: "1.1",
                                                        viewBox: "0 0 82 82",
                                                        xmlns: "http://www.w3.org/2000/svg",
                                                        xmlnsXlink: "http://www.w3.org/1999/xlink"
                                                      }, React.createElement("defs", undefined, React.createElement("linearGradient", {
                                                                id: "apple-m1-linearGradient-1",
                                                                x1: "0%",
                                                                x2: "100%",
                                                                y1: "0%",
                                                                y2: "100%"
                                                              }, React.createElement("stop", {
                                                                    offset: "0%",
                                                                    stopColor: "#FFA456"
                                                                  }), React.createElement("stop", {
                                                                    offset: "100%",
                                                                    stopColor: "#FFA456",
                                                                    stopOpacity: "0"
                                                                  })), React.createElement("linearGradient", {
                                                                id: "apple-m1-linearGradient-2",
                                                                x1: "100%",
                                                                x2: "50%",
                                                                y1: "0%",
                                                                y2: "50%"
                                                              }, React.createElement("stop", {
                                                                    offset: "0%",
                                                                    stopColor: "#00B1EE"
                                                                  }), React.createElement("stop", {
                                                                    offset: "100%",
                                                                    stopColor: "#00B1EE",
                                                                    stopOpacity: "0"
                                                                  })), React.createElement("linearGradient", {
                                                                id: "apple-m1-linearGradient-3",
                                                                x1: "0%",
                                                                x2: "50%",
                                                                y1: "100%",
                                                                y2: "50%"
                                                              }, React.createElement("stop", {
                                                                    offset: "0%",
                                                                    stopColor: "#EE0000"
                                                                  }), React.createElement("stop", {
                                                                    offset: "100%",
                                                                    stopColor: "#EE00E1",
                                                                    stopOpacity: "0"
                                                                  })), React.createElement("linearGradient", {
                                                                id: "apple-m1-linearGradient-4",
                                                                x1: "100%",
                                                                x2: "50%",
                                                                y1: "100%",
                                                                y2: "50%"
                                                              }, React.createElement("stop", {
                                                                    offset: "0%",
                                                                    stopColor: "#8700FF"
                                                                  }), React.createElement("stop", {
                                                                    offset: "100%",
                                                                    stopColor: "#EE00E1",
                                                                    stopOpacity: "0"
                                                                  })), React.createElement("rect", {
                                                                id: "path-5",
                                                                height: "58",
                                                                width: "58",
                                                                rx: "29",
                                                                x: "0",
                                                                y: "0"
                                                              }), React.createElement("filter", {
                                                                id: "filter-6",
                                                                height: "151.7%",
                                                                width: "151.7%",
                                                                filterUnits: "objectBoundingBox",
                                                                x: "-25.9%",
                                                                y: "-25.9%"
                                                              }, React.createElement("feGaussianBlur", {
                                                                    in: "SourceGraphic",
                                                                    stdDeviation: "5"
                                                                  }))), React.createElement("g", {
                                                            transform: "translate(-1480.000000, -21.000000)"
                                                          }, React.createElement("g", {
                                                                transform: "translate(402.000000, 33.000000)"
                                                              }, React.createElement("g", {
                                                                    filter: "url(#filter-6)",
                                                                    transform: "translate(1090.000000, -0.000000)"
                                                                  }, React.createElement("use", {
                                                                        fill: "url(#apple-m1-linearGradient-1)",
                                                                        xlinkHref: "#path-5"
                                                                      }), React.createElement("use", {
                                                                        fill: "url(#apple-m1-linearGradient-2)",
                                                                        xlinkHref: "#path-5"
                                                                      }), React.createElement("use", {
                                                                        fill: "url(#apple-m1-linearGradient-3)",
                                                                        xlinkHref: "#path-5"
                                                                      }), React.createElement("use", {
                                                                        fill: "url(#apple-m1-linearGradient-4)",
                                                                        xlinkHref: "#path-5"
                                                                      })))))
                                                }), React.createElement(Avatar.make, {
                                                  size: 40,
                                                  borderWidth: 2,
                                                  borderColor: "#000"
                                                }));
                                }),
                              onPress: (function (param) {
                                  return Curry._1(isProfileOpen_set, (function (param) {
                                                return !isProfileOpen;
                                              }));
                                })
                            }), isProfileOpen ? React.createElement(ReactNative.View, {
                                style: Object.assign({}, {
                                      position: "absolute",
                                      right: 24,
                                      top: 70
                                    }, {
                                      filter: "drop-shadow(0 0px 1px rgba(0, 0, 0, 0.75))"
                                    }),
                                children: null
                              }, React.createElement(ViewLink.make, {
                                    accessibilityLabel: "Contact",
                                    href: "/contact/",
                                    style: styles.icon,
                                    children: React.createElement(SVGEmail.make, {
                                          width: 20,
                                          height: 20,
                                          fill: Consts.Colors.lightest
                                        })
                                  }), React.createElement(SocialIcons.make, {
                                    wrapperStyle: Predefined$ReactMultiversal.styles.col,
                                    iconStyle: styles.icon,
                                    iconSize: 20
                                  })) : null)
                  })
            });
}

var make = WebsiteHeader;

var $$default = WebsiteHeader;

export {
  styles ,
  make ,
  $$default ,
  $$default as default,
  
}
/* styles Not a pure module */
