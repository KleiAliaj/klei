// Generated by ReScript, PLEASE EDIT WITH CARE

import * as T from "../T.bs.js";
import * as Caml from "rescript/lib/es6/caml.js";
import * as Font from "../components/shareable/Font.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Avatar from "../components/Avatar.bs.js";
import * as Consts from "../Consts.bs.js";
import * as TabBar from "../components/TabBar.bs.js";
import * as AppMeta from "../components/AppMeta.bs.js";
import * as SVGOsIos from "../../assets/SVGs/components/SVGOsIos.bs.js";
import * as TextLink from "../components/TextLink.bs.js";
import Head from "next/head";
import * as AppWrapper from "../components/AppWrapper.bs.js";
import * as ScreenHome from "../components/ScreenHome.bs.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as SVGOsAndroid from "../../assets/SVGs/components/SVGOsAndroid.bs.js";
import * as SVGOsWindows from "../../assets/SVGs/components/SVGOsWindows.bs.js";
import * as ReactNative from "react-native";
import * as DeviceIPhoneX from "../components/DeviceIPhoneX.bs.js";
import * as SVGDevPhpIcon from "../../assets/SVGs/components/SVGDevPhpIcon.bs.js";
import * as WebsiteFooter from "../components/WebsiteFooter.bs.js";
import * as WebsiteHeader from "../components/WebsiteHeader.bs.js";
import * as SVGBrowserEdge from "../../assets/SVGs/components/SVGBrowserEdge.bs.js";
import * as SVGBrowserChrome from "../../assets/SVGs/components/SVGBrowserChrome.bs.js";
import * as SVGBrowserSafari from "../../assets/SVGs/components/SVGBrowserSafari.bs.js";
import * as WindowSizeFilter from "../components/WindowSizeFilter.bs.js";
import * as Style$ReactNative from "rescript-react-native/src/apis/Style.bs.js";
import * as SVGFlashyTriangle1 from "../../assets/SVGs/components/SVGFlashyTriangle1.bs.js";
import * as SVGFlashyTriangle2 from "../../assets/SVGs/components/SVGFlashyTriangle2.bs.js";
import * as Animated$ReactNative from "rescript-react-native/src/apis/Animated.bs.js";
import * as Spacer$ReactMultiversal from "react-multiversal/src/Spacer.bs.js";
import * as GradientLinearBackground from "../components/shareable/GradientLinearBackground.bs.js";
import * as GradientRadialBackground from "../components/shareable/GradientRadialBackground.bs.js";
import * as Container$ReactMultiversal from "react-multiversal/src/Container.bs.js";
import * as Predefined$ReactMultiversal from "react-multiversal/src/Predefined.bs.js";
import * as SpacedView$ReactMultiversal from "react-multiversal/src/SpacedView.bs.js";
import * as ImageFromUri$ReactMultiversal from "react-multiversal/src/ImageFromUri.bs.js";
import * as ReactNativeSafeAreaContext from "react-native-safe-area-context";

function PageIndex(Props) {
  var theme = Curry._2(T.useTheme, undefined, undefined);
  var windowsDims = ReactNative.useWindowDimensions();
  var moonLightSize = Caml.caml_float_min(windowsDims.width / 2, 300);
  var match = React.useState(function () {
        
      });
  var gridLayout_set = match[1];
  var gridLayout = match[0];
  var gridLayoutCallback = React.useCallback((function (e) {
          var layout = e.nativeEvent.layout;
          return Curry._1(gridLayout_set, (function (param) {
                        return layout;
                      }));
        }), [gridLayout_set]);
  var match$1 = React.useState(function () {
        return 1;
      });
  var deviceY_set = match$1[1];
  var onDeviceLayout = React.useCallback((function (e) {
          var y = e.nativeEvent.layout.y;
          return Curry._1(deviceY_set, (function (param) {
                        return y;
                      }));
        }), [deviceY_set]);
  var visualHeight = 240 * DeviceIPhoneX.originalRatio;
  var deviceInitialScale = 240 / 450;
  var maxWidthToPlayWith = (
    windowsDims.width < 800 ? windowsDims.width : 800
  ) - 240 / 2;
  var gap = Caml.caml_float_max(0, match$1[0] - visualHeight / 2);
  var skewYValue = Style$ReactNative.deg(-15);
  var skewYValue$1 = Style$ReactNative.deg(15);
  return React.createElement(ReactNativeSafeAreaContext.SafeAreaProvider, {
              initialMetrics: AppWrapper.initialMetrics,
              children: null
            }, React.createElement(AppMeta.make, {}), React.createElement(Head, {
                  children: React.createElement("title", undefined, Consts.title + ", " + Consts.defaultTitle)
                }), React.createElement(GradientLinearBackground.make, {
                  style: Predefined$ReactMultiversal.styles.flex1,
                  stops: [
                    {
                      offset: Style$ReactNative.pct(0),
                      stopColor: "#01093C",
                      stopOpacity: "1"
                    },
                    {
                      offset: Style$ReactNative.pct(100),
                      stopColor: "#060C4E",
                      stopOpacity: "1"
                    }
                  ],
                  children: null
                }, React.createElement(GradientRadialBackground.make, {
                      style: {
                        height: moonLightSize,
                        left: 0,
                        position: "absolute",
                        top: 0,
                        width: moonLightSize
                      },
                      stops: [
                        {
                          offset: Style$ReactNative.pct(0),
                          stopColor: "#00F6FF",
                          stopOpacity: "0.2"
                        },
                        {
                          offset: Style$ReactNative.pct(50),
                          stopColor: "#00F6FF",
                          stopOpacity: "0"
                        }
                      ]
                    }), React.createElement("div", {
                      style: {
                        background: "url(/_/stars.png) repeat 0% 0% / 400px 300px",
                        display: "flex",
                        flexDirection: "column",
                        flexGrow: "1"
                      }
                    }, React.createElement(WebsiteHeader.make, {}), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XL */1
                        }), React.createElement(ReactNative.View, {
                          onLayout: gridLayoutCallback,
                          style: [
                            Predefined$ReactMultiversal.styles.center,
                            {
                              transform: [{
                                  translateZ: "1000px"
                                }]
                            }
                          ],
                          children: null
                        }, React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XL */1
                            }), React.createElement(Animated$ReactNative.View.make, {
                              style: [
                                ReactNative.StyleSheet.absoluteFill,
                                Predefined$ReactMultiversal.styles.center,
                                {
                                  transform: Belt_Option.mapWithDefault(gridLayout, [
                                        {
                                          translateZ: "1000px"
                                        },
                                        {
                                          translateY: -25
                                        },
                                        {
                                          perspective: 1000
                                        },
                                        {
                                          rotateY: Style$ReactNative.deg(15)
                                        },
                                        {
                                          rotateX: Style$ReactNative.deg(40)
                                        }
                                      ], (function (layout) {
                                          return [
                                                  {
                                                    translateZ: "1000px"
                                                  },
                                                  {
                                                    translateY: -25
                                                  },
                                                  {
                                                    perspective: 1000
                                                  },
                                                  {
                                                    scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                                          inputRange: [
                                                            0,
                                                            layout.height * 1.5
                                                          ],
                                                          outputRange: [
                                                            1,
                                                            0.85
                                                          ],
                                                          extrapolate: "identity",
                                                          extrapolateLeft: "clamp",
                                                          extrapolateRight: "clamp"
                                                        })
                                                  },
                                                  {
                                                    rotateY: AppWrapper.scrollYAnimatedValue.interpolate({
                                                          inputRange: [
                                                            0,
                                                            layout.height * 1.5
                                                          ],
                                                          outputRange: [
                                                            "15deg",
                                                            "-15deg"
                                                          ],
                                                          extrapolate: "identity",
                                                          extrapolateLeft: "clamp",
                                                          extrapolateRight: "clamp"
                                                        })
                                                  },
                                                  {
                                                    rotateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                          inputRange: [
                                                            0,
                                                            layout.height
                                                          ],
                                                          outputRange: [
                                                            "40deg",
                                                            "50deg"
                                                          ],
                                                          extrapolate: "identity",
                                                          extrapolateLeft: "clamp",
                                                          extrapolateRight: "clamp"
                                                        })
                                                  }
                                                ];
                                        }))
                                }
                              ],
                              children: React.createElement(ImageFromUri$ReactMultiversal.make, {
                                    uri: "/_/8x8grid.png",
                                    resizeMode: "contain",
                                    style: {
                                      height: 650,
                                      width: 650
                                    }
                                  })
                            }), React.createElement(ReactNative.View, {
                              style: [
                                Predefined$ReactMultiversal.styles.center,
                                {
                                  transform: [{
                                      translateZ: "2000px"
                                    }]
                                }
                              ],
                              children: null
                            }, React.createElement(Animated$ReactNative.View.make, {
                                  style: Object.assign({}, {
                                        transform: Belt_Option.mapWithDefault(gridLayout, [], (function (layout) {
                                                return [
                                                        {
                                                          translateZ: "0px"
                                                        },
                                                        {
                                                          scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  1,
                                                                  0.2
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateY: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -50
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  100
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        }
                                                      ];
                                              })),
                                        left: Style$ReactNative.pct(-25),
                                        position: "absolute",
                                        top: Style$ReactNative.pct(-15)
                                      }, {
                                        filter: "drop-shadow(0 0 20px #fff) drop-shadow(0 0 10px #fff) drop-shadow(0 0 5px #fff)"
                                      }),
                                  children: React.createElement(SVGOsIos.make, {
                                        width: 36,
                                        height: 36,
                                        fill: "#fff"
                                      })
                                }), React.createElement(Animated$ReactNative.View.make, {
                                  style: Object.assign({}, {
                                        transform: Belt_Option.mapWithDefault(gridLayout, [], (function (layout) {
                                                return [
                                                        {
                                                          translateZ: "0px"
                                                        },
                                                        {
                                                          scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  1,
                                                                  0.2
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateY: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -50
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -100
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        }
                                                      ];
                                              })),
                                        position: "absolute",
                                        right: 0,
                                        top: -25
                                      }, {
                                        filter: "drop-shadow(0 0 20px #13FF00) drop-shadow(0 0 10px #13FF00) drop-shadow(0 0 5px #13FF00)"
                                      }),
                                  children: React.createElement(SVGOsAndroid.make, {
                                        width: 32,
                                        height: 32,
                                        fill: "#fff"
                                      })
                                }), React.createElement(Animated$ReactNative.View.make, {
                                  style: Object.assign({}, {
                                        transform: Belt_Option.mapWithDefault(gridLayout, [], (function (layout) {
                                                return [
                                                        {
                                                          translateZ: "0px"
                                                        },
                                                        {
                                                          translateY: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -60
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -80
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  1,
                                                                  2
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        }
                                                      ];
                                              })),
                                        bottom: -50,
                                        position: "absolute",
                                        right: -10
                                      }, {
                                        filter: "drop-shadow(0 0 20px #0067FF) drop-shadow(0 0 10px #0067FF) drop-shadow(0 0 5px #0067FF)"
                                      }),
                                  children: React.createElement(SVGOsWindows.make, {
                                        width: 24,
                                        height: 24,
                                        fill: "#fff"
                                      })
                                }), React.createElement(Animated$ReactNative.View.make, {
                                  style: Object.assign({}, {
                                        transform: Belt_Option.mapWithDefault(gridLayout, [], (function (layout) {
                                                return [
                                                        {
                                                          translateZ: "0px"
                                                        },
                                                        {
                                                          scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  1,
                                                                  1.4
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateY: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -50
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -100
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        }
                                                      ];
                                              })),
                                        bottom: 25,
                                        left: -50,
                                        position: "absolute"
                                      }, {
                                        filter: "drop-shadow(0 0 20px #00AAFF) drop-shadow(0 0 10px #00AAFF) drop-shadow(0 0 5px #00AAFF)"
                                      }),
                                  children: React.createElement(SVGBrowserSafari.make, {
                                        width: 28,
                                        height: 28,
                                        fill: "#fff"
                                      })
                                }), React.createElement(Animated$ReactNative.View.make, {
                                  style: Object.assign({}, {
                                        transform: Belt_Option.mapWithDefault(gridLayout, [], (function (layout) {
                                                return [
                                                        {
                                                          translateZ: "0px"
                                                        },
                                                        {
                                                          scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  1,
                                                                  1.6
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateY: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -50
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -60
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        }
                                                      ];
                                              })),
                                        bottom: -85,
                                        left: 50,
                                        position: "absolute"
                                      }, {
                                        filter: "drop-shadow(0 0 20px #FF6F6F) drop-shadow(0 0 10px #FF6F6F) drop-shadow(0 0 5px #FF6F6F)"
                                      }),
                                  children: React.createElement(SVGBrowserChrome.make, {
                                        width: 24,
                                        height: 24,
                                        fill: "#fff"
                                      })
                                }), React.createElement(Animated$ReactNative.View.make, {
                                  style: Object.assign({}, {
                                        transform: Belt_Option.mapWithDefault(gridLayout, [], (function (layout) {
                                                return [
                                                        {
                                                          translateZ: "0px"
                                                        },
                                                        {
                                                          scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  1,
                                                                  2.5
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateY: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -50
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        },
                                                        {
                                                          translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                inputRange: [
                                                                  0,
                                                                  layout.height * 1.5
                                                                ],
                                                                outputRange: [
                                                                  0,
                                                                  -50
                                                                ],
                                                                extrapolate: "identity",
                                                                extrapolateLeft: "clamp",
                                                                extrapolateRight: "clamp"
                                                              })
                                                        }
                                                      ];
                                              })),
                                        bottom: -150,
                                        left: 200,
                                        position: "absolute"
                                      }, {
                                        filter: "drop-shadow(0 0 20px #3081FF) drop-shadow(0 0 10px #3081FF) drop-shadow(0 0 5px #3081FF)"
                                      }),
                                  children: React.createElement(SVGBrowserEdge.make, {
                                        width: 20,
                                        height: 20,
                                        fill: "#fff"
                                      })
                                }), React.createElement(Animated$ReactNative.View.make, {
                                  style: [
                                    ReactNative.StyleSheet.absoluteFill,
                                    {
                                      transform: Belt_Option.mapWithDefault(gridLayout, [], (function (layout) {
                                              return [
                                                      {
                                                        translateZ: "0px"
                                                      },
                                                      {
                                                        scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                                              inputRange: [
                                                                0,
                                                                layout.height * 1.5
                                                              ],
                                                              outputRange: [
                                                                1,
                                                                0.8
                                                              ],
                                                              extrapolate: "identity",
                                                              extrapolateLeft: "clamp",
                                                              extrapolateRight: "clamp"
                                                            })
                                                      },
                                                      {
                                                        translateY: AppWrapper.scrollYAnimatedValue.interpolate({
                                                              inputRange: [
                                                                0,
                                                                layout.height * 1.5
                                                              ],
                                                              outputRange: [
                                                                0,
                                                                10
                                                              ],
                                                              extrapolate: "identity",
                                                              extrapolateLeft: "clamp",
                                                              extrapolateRight: "clamp"
                                                            })
                                                      },
                                                      {
                                                        translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                              inputRange: [
                                                                0,
                                                                layout.height * 1.5
                                                              ],
                                                              outputRange: [
                                                                0,
                                                                10
                                                              ],
                                                              extrapolate: "identity",
                                                              extrapolateLeft: "clamp",
                                                              extrapolateRight: "clamp"
                                                            })
                                                      },
                                                      {
                                                        rotateZ: AppWrapper.scrollYAnimatedValue.interpolate({
                                                              inputRange: [
                                                                0,
                                                                layout.height * 1.5
                                                              ],
                                                              outputRange: [
                                                                "0deg",
                                                                "5deg"
                                                              ],
                                                              extrapolate: "identity",
                                                              extrapolateLeft: "extend",
                                                              extrapolateRight: "extend"
                                                            })
                                                      }
                                                    ];
                                            })),
                                      left: -30
                                    }
                                  ],
                                  children: null
                                }, React.createElement(SVGFlashyTriangle1.make, {
                                      width: Style$ReactNative.pct(100),
                                      height: Style$ReactNative.pct(100)
                                    }), React.createElement(ReactNative.View, {
                                      accessible: false,
                                      style: {
                                        bottom: 0,
                                        left: Style$ReactNative.pct(75),
                                        position: "absolute"
                                      },
                                      children: React.createElement(ReactNative.Text, {
                                            accessible: false,
                                            children: "a",
                                            style: Object.assign({}, {
                                                  fontFamily: "StoneHarbourWash",
                                                  fontSize: 150,
                                                  lineHeight: 150,
                                                  bottom: -30,
                                                  position: "absolute"
                                                }, {
                                                  filter: "drop-shadow(0 2px 4px rgba(122,22,102,0.50))",
                                                  WebkitTextStroke: "1px #A56C99",
                                                  backgroundClip: "text",
                                                  WebkitTextFillColor: "transparent",
                                                  backgroundColor: "#F451C8",
                                                  backgroundImage: "linear-gradient(90deg, #F451C8 0%, #EACE5E 50%)"
                                                })
                                          })
                                    })), React.createElement(ReactNative.View, {
                                  style: Predefined$ReactMultiversal.styles.rowCenter,
                                  children: null
                                }, React.createElement(Spacer$ReactMultiversal.make, {
                                      size: /* XL */1
                                    }), React.createElement(ReactNative.View, {
                                      children: null
                                    }, React.createElement(ReactNative.Text, {
                                          children: "I MakE",
                                          style: {
                                            color: "#fff",
                                            fontFamily: "StoneHarbour",
                                            fontSize: 48,
                                            lineHeight: 48
                                          }
                                        }), React.createElement(Spacer$ReactMultiversal.make, {
                                          size: /* S */4
                                        }), React.createElement(ReactNative.Text, {
                                          children: null,
                                          style: Object.assign({}, {
                                                color: "#fff",
                                                fontFamily: "Phosphate",
                                                fontSize: 80,
                                                lineHeight: 80,
                                                textShadowColor: "#1DB6B2",
                                                textShadowRadius: 10
                                              }, {
                                                WebkitTextStroke: "1.5px #3EF8D9"
                                              })
                                        }, "APPS", React.createElement(ReactNative.Text, {
                                              children: "&",
                                              style: {
                                                fontSize: 40,
                                                lineHeight: 40
                                              }
                                            })), React.createElement(Spacer$ReactMultiversal.make, {
                                          size: /* XXS */6
                                        }), React.createElement(ReactNative.Text, {
                                          children: "WEBSITES",
                                          style: Object.assign({}, {
                                                color: "#fff",
                                                fontFamily: "Phosphate",
                                                fontSize: 51,
                                                lineHeight: 51,
                                                textShadowColor: "#1DB6B2",
                                                textShadowRadius: 10,
                                                marginTop: -15
                                              }, {
                                                WebkitTextStroke: "1px #3EF8D9"
                                              })
                                        }), React.createElement(Spacer$ReactMultiversal.make, {
                                          size: /* XL */1
                                        })))), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XL */1
                            }), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XL */1
                            })), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(WindowSizeFilter.MMin.make, {
                          children: React.createElement(Spacer$ReactMultiversal.make, {
                                size: /* XXL */0
                              })
                        }), React.createElement(ReactNative.View, {
                          onLayout: onDeviceLayout,
                          style: [
                            Predefined$ReactMultiversal.styles.center,
                            {
                              zIndex: 2
                            }
                          ],
                          children: null
                        }, React.createElement(ReactNative.View, {
                              style: [
                                ReactNative.StyleSheet.absoluteFill,
                                Predefined$ReactMultiversal.styles.center,
                                {
                                  transform: [
                                    {
                                      rotate: Style$ReactNative.deg(-3)
                                    },
                                    {
                                      scale: 1.1
                                    },
                                    {
                                      translateZ: "0px"
                                    }
                                  ],
                                  bottom: Style$ReactNative.pct(-10),
                                  top: Style$ReactNative.pct(-10)
                                },
                                {
                                  background: "linear-gradient(120deg, #F451C8, #EACE5E)"
                                }
                              ],
                              children: React.createElement(Container$ReactMultiversal.make, {
                                    children: null
                                  }, React.createElement(ReactNative.Text, {
                                        children: null,
                                        style: [
                                          {
                                            fontSize: 60,
                                            opacity: 0.25,
                                            left: Style$ReactNative.pct(0),
                                            position: "absolute",
                                            top: Style$ReactNative.pct(10)
                                          },
                                          T.stylesDark.text
                                        ]
                                      }, "< ", React.createElement(ReactNative.Text, {
                                            children: "HTML",
                                            style: {
                                              fontFamily: "Phosphate"
                                            }
                                          }), " />"), React.createElement(ReactNative.Text, {
                                        children: ".css {}",
                                        style: [
                                          {
                                            fontFamily: "StoneHarbour",
                                            fontSize: 60,
                                            opacity: 0.35,
                                            bottom: Style$ReactNative.pct(10),
                                            left: Style$ReactNative.pct(15),
                                            position: "absolute"
                                          },
                                          T.stylesDark.text
                                        ]
                                      }), React.createElement(ReactNative.Text, {
                                        children: "JavaScript()",
                                        style: [
                                          {
                                            fontSize: 50,
                                            opacity: 0.5,
                                            left: Style$ReactNative.pct(35),
                                            position: "absolute",
                                            top: Style$ReactNative.pct(30)
                                          },
                                          Font.weight.thin,
                                          T.stylesDark.text
                                        ]
                                      }), React.createElement(ReactNative.Text, {
                                        children: "TypeScript()",
                                        style: [
                                          {
                                            fontSize: 20,
                                            opacity: 0.25,
                                            left: Style$ReactNative.pct(40),
                                            position: "absolute",
                                            top: Style$ReactNative.pct(50)
                                          },
                                          Font.weight.ultralight,
                                          T.stylesDark.text
                                        ]
                                      }), React.createElement(ReactNative.Text, {
                                        children: "<React/>",
                                        style: [
                                          {
                                            fontSize: 18,
                                            opacity: 0.4,
                                            bottom: Style$ReactNative.pct(20),
                                            position: "absolute",
                                            right: Style$ReactNative.pct(40)
                                          },
                                          Font.weight.ultralight,
                                          T.stylesDark.text
                                        ]
                                      }), React.createElement(ReactNative.View, {
                                        style: [{
                                            opacity: 0.20,
                                            position: "absolute",
                                            right: Style$ReactNative.pct(0),
                                            top: Style$ReactNative.pct(40)
                                          }],
                                        children: React.createElement(SVGDevPhpIcon.make, {
                                              width: 128,
                                              height: 128,
                                              fill: T.colorsDark.text
                                            })
                                      }), React.createElement(ReactNative.Text, {
                                        children: "rescript()",
                                        style: [
                                          {
                                            opacity: 0.25,
                                            position: "absolute",
                                            right: Style$ReactNative.pct(15),
                                            top: Style$ReactNative.pct(10)
                                          },
                                          T.stylesDark.text,
                                          Font.iosEm.title1
                                        ]
                                      }))
                            }), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XXL */0
                            }), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XXL */0
                            }), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XXL */0
                            }), React.createElement(WindowSizeFilter.SMax.make, {
                              children: null
                            }, React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* XXL */0
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* XXL */0
                                })), React.createElement(DeviceIPhoneX.make, {
                              style: {
                                transform: [
                                  {
                                    perspective: 1000
                                  },
                                  {
                                    translateZ: "100px"
                                  },
                                  {
                                    scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                          inputRange: [
                                            0,
                                            gap,
                                            gap + visualHeight
                                          ],
                                          outputRange: [
                                            deviceInitialScale,
                                            deviceInitialScale * 1.05,
                                            deviceInitialScale * 0.95
                                          ],
                                          extrapolate: "identity",
                                          extrapolateLeft: "extend",
                                          extrapolateRight: "extend"
                                        })
                                  },
                                  {
                                    translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                          inputRange: [
                                            0,
                                            gap,
                                            gap + visualHeight
                                          ],
                                          outputRange: [
                                            maxWidthToPlayWith,
                                            0,
                                            -maxWidthToPlayWith
                                          ],
                                          extrapolate: "identity",
                                          extrapolateLeft: "extend",
                                          extrapolateRight: "extend"
                                        })
                                  },
                                  {
                                    translateY: AppWrapper.scrollYAnimatedValue.interpolate({
                                          inputRange: [
                                            0,
                                            gap,
                                            gap + visualHeight
                                          ],
                                          outputRange: [
                                            0,
                                            -25,
                                            -50
                                          ],
                                          extrapolate: "identity",
                                          extrapolateLeft: "extend",
                                          extrapolateRight: "extend"
                                        })
                                  },
                                  {
                                    rotateX: Style$ReactNative.deg(2)
                                  },
                                  {
                                    rotateZ: AppWrapper.scrollYAnimatedValue.interpolate({
                                          inputRange: [
                                            0,
                                            gap,
                                            gap + visualHeight
                                          ],
                                          outputRange: [
                                            "5deg",
                                            "0deg",
                                            "-5deg"
                                          ],
                                          extrapolate: "identity",
                                          extrapolateLeft: "extend",
                                          extrapolateRight: "extend"
                                        })
                                  }
                                ],
                                position: "absolute",
                                zIndex: 2
                              },
                              width: 450,
                              children: null
                            }, React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* L */2
                                }), React.createElement(SpacedView$ReactMultiversal.make, {
                                  style: Predefined$ReactMultiversal.styles.rowSpaceBetween,
                                  children: null
                                }, React.createElement(ReactNative.View, {
                                      children: null
                                    }, React.createElement(ReactNative.Text, {
                                          children: "HI, I AM",
                                          style: [
                                            Font.ios.subtitle1,
                                            T.stylesLight.textLight1
                                          ]
                                        }), React.createElement(ReactNative.Text, {
                                          children: "Klei",
                                          style: [
                                            Font.iosEm.largeTitle,
                                            T.stylesLight.text
                                          ]
                                        })), React.createElement(Avatar.make, {
                                      size: 56
                                    })), React.createElement(ScreenHome.make, {
                                  theme: "light"
                                }))), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(ReactNative.View, {
                          style: {
                            margin: "auto",
                            maxWidth: 750,
                            width: Style$ReactNative.pct(100)
                          },
                          children: null
                        }, React.createElement(ReactNative.View, {
                              style: [
                                ReactNative.StyleSheet.absoluteFill,
                                {
                                  transform: [
                                    {
                                      skewY: skewYValue
                                    },
                                    {
                                      translateZ: "0px"
                                    }
                                  ]
                                },
                                theme.styles.back
                              ]
                            }), React.createElement(ReactNative.View, {
                              pointerEvents: "none",
                              style: [{
                                  left: -20,
                                  position: "absolute",
                                  top: -20
                                }],
                              children: React.createElement(ImageFromUri$ReactMultiversal.make, {
                                    uri: "/_/purple-splat-1.png",
                                    style: {
                                      height: 508 / 2,
                                      width: 456 / 2
                                    }
                                  })
                            }), React.createElement(ReactNative.View, {
                              pointerEvents: "none",
                              style: [{
                                  bottom: 0,
                                  position: "absolute",
                                  right: 0
                                }],
                              children: React.createElement(ImageFromUri$ReactMultiversal.make, {
                                    uri: "/_/purple-splat-2.png",
                                    style: {
                                      height: 762 / 2,
                                      width: 610 / 2
                                    }
                                  })
                            }), React.createElement(ReactNative.View, {
                              style: [Object.assign({}, {
                                      opacity: 0.85,
                                      transform: [
                                        {
                                          skewY: skewYValue
                                        },
                                        {
                                          translateZ: "0px"
                                        }
                                      ],
                                      height: 10,
                                      left: Style$ReactNative.pct(40),
                                      position: "absolute",
                                      top: 30,
                                      width: 80
                                    }, {
                                      backgroundImage: "linear-gradient(180deg, #268EC4 0%, #2C1A6E 100%)"
                                    })]
                            }), React.createElement(ReactNative.View, {
                              style: [Object.assign({}, {
                                      opacity: 0.5,
                                      transform: [
                                        {
                                          skewY: skewYValue
                                        },
                                        {
                                          translateZ: "0px"
                                        }
                                      ],
                                      height: 15,
                                      left: Style$ReactNative.pct(45),
                                      position: "absolute",
                                      top: 28,
                                      width: 120
                                    }, {
                                      backgroundImage: "linear-gradient(180deg, #0B5F90 0%, #23C3AF 100%)"
                                    })]
                            }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* XXL */0,
                              horizontal: /* L */2,
                              style: {
                                transform: [{
                                    translateZ: "0px"
                                  }],
                                margin: "auto",
                                maxWidth: 400
                              },
                              children: null
                            }, React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* L */2
                                }), React.createElement(ReactNative.Text, {
                                  children: "Creative Development",
                                  style: [
                                    Font.iosEm.title1,
                                    theme.styles.textMain
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* M */3
                                }), React.createElement(ReactNative.Text, {
                                  children: "Because I am a detailed-oriented person before being a developer, I will focus on offering the best experience to the user. That's what matter after all.",
                                  style: [
                                    Font.ios.body,
                                    theme.styles.text
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* L */2
                                }), React.createElement(ReactNative.Text, {
                                  children: "Driven by User Experience",
                                  style: [
                                    Font.iosEm.title1,
                                    theme.styles.textMain
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* M */3
                                }), React.createElement(ReactNative.Text, {
                                  children: "Focusing on UX doesn't mean that compromises on what is under the hood are made. The right technologies have their responsibilities on the end result and they must not be neglected.",
                                  style: [
                                    Font.ios.body,
                                    theme.styles.text
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* L */2
                                })), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ReactNative.View, {
                              style: [Object.assign({}, {
                                      opacity: 0.95,
                                      transform: [
                                        {
                                          skewY: skewYValue
                                        },
                                        {
                                          translateZ: "0px"
                                        }
                                      ],
                                      bottom: -10,
                                      height: 20,
                                      left: Style$ReactNative.pct(-5),
                                      position: "absolute",
                                      width: 140
                                    }, {
                                      backgroundImage: "linear-gradient(180deg, #268EC4 0%, #2C1A6E 100%)"
                                    })]
                            }), React.createElement(ReactNative.View, {
                              style: [Object.assign({}, {
                                      opacity: 0.85,
                                      transform: [
                                        {
                                          skewY: skewYValue
                                        },
                                        {
                                          translateZ: "0px"
                                        }
                                      ],
                                      bottom: 20,
                                      height: 10,
                                      left: Style$ReactNative.pct(10),
                                      position: "absolute",
                                      width: 80
                                    }, {
                                      backgroundImage: "linear-gradient(180deg, #0B5F90 0%, #23C3AF 100%)"
                                    })]
                            })), React.createElement(Container$ReactMultiversal.make, {
                          children: null
                        }, React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XXL */0
                            }), React.createElement(ReactNative.View, {
                              accessible: false,
                              style: {
                                height: 100,
                                width: Style$ReactNative.pct(100)
                              },
                              children: null
                            }, React.createElement(ReactNative.View, {
                                  style: {
                                    bottom: 0,
                                    position: "absolute",
                                    right: 0
                                  },
                                  children: React.createElement(ReactNative.Text, {
                                        accessible: false,
                                        children: "h",
                                        style: Object.assign({}, {
                                              fontFamily: "StoneHarbourWash",
                                              fontSize: 150,
                                              lineHeight: 150,
                                              transform: [{
                                                  rotate: Style$ReactNative.deg(25)
                                                }]
                                            }, {
                                              filter: "drop-shadow(0 2px 4px rgba(122,22,102,0.50))",
                                              WebkitTextStroke: "1px #A56C99",
                                              backgroundClip: "text",
                                              WebkitTextFillColor: "transparent",
                                              backgroundColor: "#008CDE",
                                              backgroundImage: "linear-gradient(-60deg, #008CDE 0%, #23C3AF 100%)"
                                            })
                                      })
                                }), React.createElement(ReactNative.View, {
                                  style: {
                                    bottom: 0,
                                    position: "absolute",
                                    right: 50
                                  },
                                  children: React.createElement(SVGFlashyTriangle2.make, {
                                        width: 150,
                                        height: 150
                                      })
                                })), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XXL */0
                            })), React.createElement(Container$ReactMultiversal.make, {
                          style: Predefined$ReactMultiversal.styles.center,
                          maxWidth: 600,
                          children: null
                        }, React.createElement(ReactNative.View, {
                              style: {
                                margin: "auto",
                                marginLeft: 0,
                                maxWidth: 500,
                                width: Style$ReactNative.pct(100)
                              },
                              children: null
                            }, React.createElement(ReactNative.View, {
                                  style: [
                                    ReactNative.StyleSheet.absoluteFill,
                                    Object.assign({}, {
                                          backgroundColor: "#190349",
                                          transform: [
                                            {
                                              translateZ: "0px"
                                            },
                                            {
                                              translateY: -25
                                            },
                                            {
                                              perspective: 1000
                                            },
                                            {
                                              rotateY: Style$ReactNative.deg(10)
                                            },
                                            {
                                              rotateX: Style$ReactNative.deg(-10)
                                            }
                                          ]
                                        }, {
                                          filter: "drop-shadow(0px 10px 20px rgba(0,0,0,0.5))",
                                          backgroundImage: "linear-gradient(0deg, #190349 0%, #49007B 100%)"
                                        })
                                  ]
                                }), React.createElement(ReactNative.View, {
                                  style: {
                                    transform: [{
                                        translateZ: "1000px"
                                      }],
                                    margin: "auto",
                                    maxWidth: 380
                                  },
                                  children: React.createElement(SpacedView$ReactMultiversal.make, {
                                        vertical: /* L */2,
                                        children: null
                                      }, React.createElement(ReactNative.Text, {
                                            children: "Design",
                                            style: Object.assign({}, {
                                                  color: "#fff",
                                                  fontFamily: "StoneHarbour",
                                                  fontSize: 100,
                                                  lineHeight: 100
                                                }, {
                                                  filter: "drop-shadow(1px 1px 1px rgba(0,0,0,0.5)) drop-shadow(2px 8px 11px rgba(254,167,183,0.22))",
                                                  backgroundClip: "text",
                                                  WebkitTextFillColor: "transparent",
                                                  backgroundImage: "linear-gradient(0deg, #DBC469 0%, #EC6FCB 80%)"
                                                })
                                          }), React.createElement(Spacer$ReactMultiversal.make, {
                                            size: /* L */2
                                          }), React.createElement(ReactNative.Text, {
                                            children: null,
                                            style: [
                                              Font.ios.body,
                                              theme.styles.textOnMain
                                            ]
                                          }, "Depending on your need, I will always be sure to offer you what is best to achieve your goal.\nWether you need an original design or something that will blend in the platform you want to support, I will be able to help you. ", "When it comes to optimise user experience, I try to make websites & apps that don’t reinvente the weel so users can always find their way into your world. "), React.createElement(ReactNative.Text, {
                                            children: "b",
                                            style: Object.assign({}, {
                                                  fontFamily: "StoneHarbourWash",
                                                  fontSize: 150,
                                                  lineHeight: 150,
                                                  textAlign: "center"
                                                }, {
                                                  filter: "drop-shadow(1px 1px 1px rgba(0,0,0,0.5)) drop-shadow(2px 8px 11px rgba(254,167,183,0.22))",
                                                  backgroundImage: "linear-gradient(50deg, #EC6FCB 0%, #DBC469 60%)",
                                                  WebkitTextStroke: "0.5px #A56C99",
                                                  backgroundClip: "text",
                                                  WebkitTextFillColor: "transparent"
                                                })
                                          }))
                                })), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XXL */0
                            }), React.createElement(ReactNative.View, {
                              style: {
                                margin: "auto",
                                marginRight: 0,
                                maxWidth: 450,
                                width: Style$ReactNative.pct(100)
                              },
                              children: null
                            }, React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* L */2
                                }), React.createElement(ReactNative.View, {
                                  style: [
                                    ReactNative.StyleSheet.absoluteFill,
                                    Object.assign({}, {
                                          backgroundColor: "#792F93",
                                          transform: [
                                            {
                                              translateZ: "0px"
                                            },
                                            {
                                              translateY: -60
                                            },
                                            {
                                              perspective: 750
                                            },
                                            {
                                              rotateX: Style$ReactNative.deg(10)
                                            },
                                            {
                                              rotateY: Style$ReactNative.deg(-10)
                                            },
                                            {
                                              rotateZ: Style$ReactNative.deg(4)
                                            }
                                          ]
                                        }, {
                                          filter: "drop-shadow(0px 10px 20px rgba(0,0,0,0.5))",
                                          backgroundImage: "linear-gradient(0deg, #792F93 0%, #000064 80%)"
                                        })
                                  ]
                                }), React.createElement(ReactNative.View, {
                                  style: {
                                    transform: [{
                                        translateZ: "1000px"
                                      }],
                                    margin: "auto",
                                    maxWidth: 380
                                  },
                                  children: React.createElement(SpacedView$ReactMultiversal.make, {
                                        vertical: /* L */2,
                                        children: null
                                      }, React.createElement(ReactNative.Text, {
                                            children: "CODE",
                                            style: Object.assign({}, {
                                                  color: "#fff",
                                                  fontFamily: "Phosphate",
                                                  fontSize: 100,
                                                  lineHeight: 100,
                                                  textAlign: "right"
                                                }, {
                                                  WebkitTextStroke: "1px #3EF8D9",
                                                  filter: "drop-shadow(0 0 14px #1DB6B2)"
                                                })
                                          }), React.createElement(Spacer$ReactMultiversal.make, {
                                            size: /* L */2
                                          }), React.createElement(ReactNative.Text, {
                                            children: "I made my first website when I was a kid. I didn’t stop hacking things since then.\nI always try things to discover news stuff and learn everyday.\nNow I build websites & apps like a pro. My various experiences help me to make the right choice with technologies each time I have decision to take without doing all the mistakes I did in the past. Because I have done a lot of them (and we all know that learning from our own mistakes is the best way to go).",
                                            style: [
                                              Font.ios.body,
                                              theme.styles.textOnMain
                                            ]
                                          }), React.createElement(ReactNative.Text, {
                                            children: "-",
                                            style: Object.assign({}, {
                                                  color: "#fff",
                                                  fontFamily: "Phosphate",
                                                  fontSize: 150,
                                                  lineHeight: 150,
                                                  textAlign: "right"
                                                }, {
                                                  WebkitTextStroke: "1px #3EF8D9",
                                                  filter: "drop-shadow(0 0 14px #1DB6B2)"
                                                })
                                          }))
                                })), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XXL */0
                            })), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(ReactNative.View, {
                          style: {
                            margin: "auto",
                            maxWidth: 750,
                            width: Style$ReactNative.pct(100)
                          },
                          children: null
                        }, React.createElement(ReactNative.View, {
                              style: [
                                ReactNative.StyleSheet.absoluteFill,
                                {
                                  transform: [
                                    {
                                      skewY: skewYValue$1
                                    },
                                    {
                                      translateZ: "0px"
                                    }
                                  ]
                                },
                                theme.styles.back
                              ]
                            }), React.createElement(ReactNative.View, {
                              pointerEvents: "none",
                              style: [{
                                  left: -20,
                                  position: "absolute",
                                  top: -20
                                }],
                              children: React.createElement(ImageFromUri$ReactMultiversal.make, {
                                    uri: "/_/purple-splat-1.png",
                                    style: {
                                      height: 508 / 2,
                                      width: 456 / 2
                                    }
                                  })
                            }), React.createElement(ReactNative.View, {
                              pointerEvents: "none",
                              style: [{
                                  bottom: 0,
                                  position: "absolute",
                                  right: 0
                                }],
                              children: React.createElement(ImageFromUri$ReactMultiversal.make, {
                                    uri: "/_/purple-splat-2.png",
                                    style: {
                                      height: 762 / 2,
                                      width: 610 / 2
                                    }
                                  })
                            }), React.createElement(ReactNative.View, {
                              style: [Object.assign({}, {
                                      opacity: 0.85,
                                      transform: [
                                        {
                                          skewY: skewYValue$1
                                        },
                                        {
                                          translateZ: "0px"
                                        }
                                      ],
                                      height: 10,
                                      left: Style$ReactNative.pct(40),
                                      position: "absolute",
                                      top: 30,
                                      width: 80
                                    }, {
                                      backgroundImage: "linear-gradient(180deg, #268EC4 0%, #2C1A6E 100%)"
                                    })]
                            }), React.createElement(ReactNative.View, {
                              style: [Object.assign({}, {
                                      opacity: 0.5,
                                      transform: [
                                        {
                                          skewY: skewYValue$1
                                        },
                                        {
                                          translateZ: "0px"
                                        }
                                      ],
                                      height: 15,
                                      left: Style$ReactNative.pct(45),
                                      position: "absolute",
                                      top: 28,
                                      width: 120
                                    }, {
                                      backgroundImage: "linear-gradient(180deg, #0B5F90 0%, #23C3AF 100%)"
                                    })]
                            }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* XXL */0,
                              horizontal: /* L */2,
                              style: {
                                transform: [{
                                    translateZ: "0px"
                                  }],
                                margin: "auto",
                                maxWidth: 400
                              },
                              children: null
                            }, React.createElement(ReactNative.Text, {
                                  children: "Mobile, Desktop & Web",
                                  style: [
                                    Font.iosEm.title1,
                                    theme.styles.textMain
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* M */3
                                }), React.createElement(ReactNative.Text, {
                                  children: "By choosing the right technology, code can be shared across platforms. This means same code can be used to power an app on mobile devices, laptop and in any web browsers, mobile or desktop.",
                                  style: [
                                    Font.ios.body,
                                    theme.styles.text
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* L */2
                                }), React.createElement(ReactNative.Text, {
                                  children: "Cross-platform code",
                                  style: [
                                    Font.iosEm.title1,
                                    theme.styles.textMain
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* M */3
                                }), React.createElement(ReactNative.Text, {
                                  children: null,
                                  style: [
                                    Font.ios.body,
                                    theme.styles.text
                                  ]
                                }, "I build websites & apps that works on multiple OS & browsers because I care about everyone.\nMost of the time I use React Native, the same techology used by tech giants like Facebook, Microsoft, Instagram, Twitter, Tesla & ", React.createElement(TextLink.make, {
                                      children: "many more every day",
                                      href: "https://reactnative.dev/showcase",
                                      style: theme.styles.textMain
                                    }), "."), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* L */2
                                }), React.createElement(ReactNative.Text, {
                                  children: "Fast Websites & Native apps",
                                  style: [
                                    Font.iosEm.title1,
                                    theme.styles.textMain
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* M */3
                                }), React.createElement(ReactNative.Text, {
                                  children: "Building cross-platform websites & apps can be risky if not implemented with the right technology.\nReact Native helps to use native apis & components under the hoods to ensure native experiences that can smoothly work on the web.",
                                  style: [
                                    Font.ios.body,
                                    theme.styles.text
                                  ]
                                })), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ReactNative.View, {
                              style: [Object.assign({}, {
                                      opacity: 0.95,
                                      transform: [
                                        {
                                          skewY: skewYValue$1
                                        },
                                        {
                                          translateZ: "0px"
                                        }
                                      ],
                                      bottom: -10,
                                      height: 20,
                                      left: Style$ReactNative.pct(-5),
                                      position: "absolute",
                                      width: 140
                                    }, {
                                      backgroundImage: "linear-gradient(180deg, #268EC4 0%, #2C1A6E 100%)"
                                    })]
                            }), React.createElement(ReactNative.View, {
                              style: [Object.assign({}, {
                                      opacity: 0.85,
                                      transform: [
                                        {
                                          skewY: skewYValue$1
                                        },
                                        {
                                          translateZ: "0px"
                                        }
                                      ],
                                      bottom: 20,
                                      height: 10,
                                      left: Style$ReactNative.pct(10),
                                      position: "absolute",
                                      width: 80
                                    }, {
                                      backgroundImage: "linear-gradient(180deg, #0B5F90 0%, #23C3AF 100%)"
                                    })]
                            })), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(WebsiteFooter.make, {}))), React.createElement(WindowSizeFilter.SMax.make, {
                  children: React.createElement(TabBar.make, {})
                }));
}

var make = PageIndex;

var $$default = PageIndex;

export {
  make ,
  $$default ,
  $$default as default,
  
}
/* T Not a pure module */
