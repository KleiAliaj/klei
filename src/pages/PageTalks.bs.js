// Generated by ReScript, PLEASE EDIT WITH CARE

import * as T from "../T.bs.js";
import * as Font from "../components/shareable/Font.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Consts from "../Consts.bs.js";
import * as TalkList from "../components/TalkList.bs.js";
import Head from "next/head";
import * as AppWrapper from "../components/AppWrapper.bs.js";
import * as BackendApi from "../BackendApi.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as ReactNative from "react-native";
import * as TalksFrontend from "../TalksFrontend.bs.js";
import * as JumbotronTalks from "../components/JumbotronTalks.bs.js";
import * as Spacer$ReactMultiversal from "react-multiversal/src/Spacer.bs.js";
import * as Container$ReactMultiversal from "react-multiversal/src/Container.bs.js";
import * as SpacedView$ReactMultiversal from "react-multiversal/src/SpacedView.bs.js";

var Malformed = {};

function PageTalks(Props) {
  var items = Props.items;
  var malformed = Props.malformed;
  var theme = Curry._2(T.useTheme, undefined, undefined);
  Belt_Array.map(malformed, (function (prim) {
          console.error(prim);
          
        }));
  return React.createElement(AppWrapper.make, {
              children: null
            }, React.createElement(Head, {
                  children: React.createElement("title", undefined, "Talks - " + Consts.defaultTitle)
                }), React.createElement(JumbotronTalks.make, {}), React.createElement(ReactNative.View, {
                  style: theme.styles.back,
                  children: null
                }, React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(Container$ReactMultiversal.make, {
                      children: null
                    }, React.createElement(ReactNative.Text, {
                          children: "Latest",
                          style: [
                            Font.ios.subtitle1,
                            theme.styles.textLight1
                          ]
                        }), React.createElement(ReactNative.Text, {
                          children: "Talks",
                          style: [
                            Font.iosEm.largeTitle,
                            theme.styles.text
                          ]
                        }), React.createElement(SpacedView$ReactMultiversal.make, {
                          children: null
                        }, React.createElement(TalkList.make, {
                              talks: items
                            }), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* L */2
                            })))));
}

function $$default(props) {
  return PageTalks({
              items: props.items,
              malformed: props.malformed
            });
}

function getStaticProps(_ctx) {
  var match = Belt_Array.reduce(BackendApi.getAll("talks"), [
        [],
        []
      ], (function (acc, itemData) {
          var malformed = acc[1];
          var items = acc[0];
          var __x = itemData.json;
          var decoded = TalksFrontend.decode(itemData.slug, __x);
          if (decoded.TAG !== /* Ok */0) {
            return [
                    items,
                    Belt_Array.concat(malformed, [{
                            id: itemData.slug,
                            message: decoded._0
                          }])
                  ];
          }
          items.push(decoded._0);
          return [
                  items,
                  malformed
                ];
        }));
  return Promise.resolve({
              props: {
                items: TalksFrontend.orderByDate(match[0]),
                malformed: match[1]
              }
            });
}

var make = PageTalks;

export {
  Malformed ,
  make ,
  $$default ,
  $$default as default,
  getStaticProps ,
  
}
/* T Not a pure module */
