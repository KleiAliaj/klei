// Generated by ReScript, PLEASE EDIT WITH CARE

import * as T from "../../../T.bs.js";
import * as Caml from "rescript/lib/es6/caml.js";
import * as Font from "../../../components/shareable/Font.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Avatar from "../../../components/Avatar.bs.js";
import * as Consts from "../../../Consts.bs.js";
import * as TabBar from "../../../components/TabBar.bs.js";
import * as AppMeta from "../../../components/AppMeta.bs.js";
import * as SVGEmail from "../../../../assets/SVGs/components/SVGEmail.bs.js";
import * as SVGPhone from "../../../../assets/SVGs/components/SVGPhone.bs.js";
import * as TextLink from "../../../components/TextLink.bs.js";
import * as ViewLink from "../../../components/ViewLink.bs.js";
import Head from "next/head";
import * as AppWrapper from "../../../components/AppWrapper.bs.js";
import * as SVGContact from "../../../../assets/SVGs/components/SVGContact.bs.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactNative from "react-native";
import * as WebsiteFooter from "../../../components/WebsiteFooter.bs.js";
import * as WebsiteHeader from "../../../components/WebsiteHeader.bs.js";
import * as SVGSocialTwitter from "../../../../assets/SVGs/components/SVGSocialTwitter.bs.js";
import * as SVGSpeechBubbles from "../../../../assets/SVGs/components/SVGSpeechBubbles.bs.js";
import * as WindowSizeFilter from "../../../components/WindowSizeFilter.bs.js";
import * as Style$ReactNative from "rescript-react-native/src/apis/Style.bs.js";
import * as Animated$ReactNative from "rescript-react-native/src/apis/Animated.bs.js";
import * as MatomoNext from "@socialgouv/matomo-next";
import * as Spacer$ReactMultiversal from "react-multiversal/src/Spacer.bs.js";
import * as GradientLinearBackground from "../../../components/shareable/GradientLinearBackground.bs.js";
import * as GradientRadialBackground from "../../../components/shareable/GradientRadialBackground.bs.js";
import * as Container$ReactMultiversal from "react-multiversal/src/Container.bs.js";
import * as Predefined$ReactMultiversal from "react-multiversal/src/Predefined.bs.js";
import * as SpacedView$ReactMultiversal from "react-multiversal/src/SpacedView.bs.js";
import * as ReactNativeSafeAreaContext from "react-native-safe-area-context";
import * as ButtonContained$ReactMultiversal from "react-multiversal/src/ButtonContained.bs.js";

var styles = ReactNative.StyleSheet.create({
      subtitle: {
        color: Consts.Colors.dark,
        fontSize: 28,
        fontWeight: "100"
      },
      title: {
        color: Consts.Colors.dark,
        fontSize: 42,
        fontWeight: "bold"
      },
      actions: {
        alignItems: "center"
      },
      button: {
        alignItems: "flex-start",
        maxWidth: 400
      }
    });

function PageMessageForKyan(Props) {
  var match = React.useState(function () {
        return false;
      });
  var isClient_set = match[1];
  React.useEffect((function () {
          Curry._1(isClient_set, (function (param) {
                  return true;
                }));
          
        }), [isClient_set]);
  var theme = Curry._2(T.useTheme, undefined, undefined);
  var windowsDims = ReactNative.useWindowDimensions();
  var moonLightSize = Caml.caml_float_min(windowsDims.width / 2, 300);
  var match$1 = React.useState(function () {
        
      });
  var helloWaveLayout_set = match$1[1];
  var onhelloWaveLayout = React.useCallback((function (e) {
          var layout = e.nativeEvent.layout;
          return Curry._1(helloWaveLayout_set, (function (param) {
                        return layout;
                      }));
        }), [helloWaveLayout_set]);
  var match$2 = React.useState(function () {
        
      });
  var quote1Layout_set = match$2[1];
  var onQuote1Layout = React.useCallback((function (e) {
          var layout = e.nativeEvent.layout;
          return Curry._1(quote1Layout_set, (function (param) {
                        return layout;
                      }));
        }), [quote1Layout_set]);
  var match$3 = React.useState(function () {
        
      });
  var punchsLayout_set = match$3[1];
  var punchsLayout = match$3[0];
  var onPunchsLayout = React.useCallback((function (e) {
          var layout = e.nativeEvent.layout;
          return Curry._1(punchsLayout_set, (function (param) {
                        return layout;
                      }));
        }), [punchsLayout_set]);
  var match$4 = React.useState(function () {
        
      });
  var thanksCardLayout_set = match$4[1];
  var onThanksCardLayout = React.useCallback((function (e) {
          var layout = e.nativeEvent.layout;
          return Curry._1(thanksCardLayout_set, (function (param) {
                        return layout;
                      }));
        }), [thanksCardLayout_set]);
  var match$5 = React.useState(function () {
        
      });
  var likeYouLayout_set = match$5[1];
  var likeYouLayout = match$5[0];
  var onLikeYouLayout = React.useCallback((function (e) {
          var layout = e.nativeEvent.layout;
          return Curry._1(likeYouLayout_set, (function (param) {
                        return layout;
                      }));
        }), [likeYouLayout_set]);
  React.useEffect((function () {
          ((window.instgrm && window.instgrm.Embeds && window.instgrm.Embeds.process && window.instgrm.Embeds.process()));
          
        }), []);
  var punchsReboundAnimatedValue = React.useRef(new (ReactNative.Animated.Value)(0));
  var punchsReboundStarsAnimatedValue = React.useRef(new (ReactNative.Animated.Value)(0));
  var punchsRebound = React.useRef(false);
  var punchsReboundAction = React.useCallback((function (param) {
          return Animated$ReactNative.start(ReactNative.Animated.parallel([
                          ReactNative.Animated.sequence([
                                Animated$ReactNative.timing(punchsReboundAnimatedValue.current, {
                                      toValue: -(windowsDims.width / 2),
                                      duration: 100,
                                      useNativeDriver: true
                                    }),
                                Animated$ReactNative.timing(punchsReboundAnimatedValue.current, {
                                      toValue: 0,
                                      duration: 250,
                                      useNativeDriver: true
                                    }),
                                Animated$ReactNative.timing(punchsReboundAnimatedValue.current, {
                                      toValue: -20,
                                      duration: 50,
                                      useNativeDriver: true
                                    }),
                                Animated$ReactNative.timing(punchsReboundAnimatedValue.current, {
                                      toValue: 0,
                                      duration: 50,
                                      useNativeDriver: true
                                    })
                              ]),
                          ReactNative.Animated.sequence([
                                Animated$ReactNative.timing(punchsReboundStarsAnimatedValue.current, {
                                      toValue: 0,
                                      duration: 225,
                                      delay: 100,
                                      useNativeDriver: true
                                    }),
                                Animated$ReactNative.timing(punchsReboundStarsAnimatedValue.current, {
                                      toValue: 1,
                                      duration: 100,
                                      useNativeDriver: true
                                    }),
                                Animated$ReactNative.timing(punchsReboundStarsAnimatedValue.current, {
                                      toValue: 0,
                                      duration: 50,
                                      useNativeDriver: true
                                    })
                              ])
                        ], {
                          stopTogether: false
                        }), undefined, undefined);
        }), [
        punchsReboundAnimatedValue,
        punchsReboundStarsAnimatedValue,
        windowsDims.width
      ]);
  React.useEffect((function () {
          return Belt_Option.getWithDefault(Belt_Option.map(punchsLayout, (function (layout) {
                            var gap = layout.y - windowsDims.height / 2;
                            var cb = function (value) {
                              if (punchsRebound.current) {
                                if (value.value < gap) {
                                  punchsRebound.current = false;
                                  MatomoNext.push([
                                        "trackEvent",
                                        "message-pour-kyan",
                                        "scroll",
                                        "punch-rollback"
                                      ]);
                                  return ;
                                } else {
                                  return ;
                                }
                              } else if (value.value > gap) {
                                punchsRebound.current = true;
                                Curry._1(punchsReboundAction, undefined);
                                MatomoNext.push([
                                      "trackEvent",
                                      "message-pour-kyan",
                                      "scroll",
                                      "punch"
                                    ]);
                                return ;
                              } else {
                                return ;
                              }
                            };
                            var id = AppWrapper.scrollYAnimatedValue.addListener(cb);
                            return (function (param) {
                                      AppWrapper.scrollYAnimatedValue.removeListener(id);
                                      
                                    });
                          })), undefined);
        }), [
        punchsLayout,
        punchsReboundAction,
        windowsDims.height
      ]);
  var tmp = ({
      contents: new (ReactNative.Animated.Value)(-1)
    }).contents;
  var punchsReboundAnimatedValueReverse = ReactNative.Animated.multiply(punchsReboundAnimatedValue.current, tmp);
  var skewYValue = Style$ReactNative.deg(5);
  return React.createElement(ReactNativeSafeAreaContext.SafeAreaProvider, {
              initialMetrics: AppWrapper.initialMetrics,
              children: null
            }, React.createElement(AppMeta.make, {}), React.createElement(Head, {
                  children: React.createElement("title", undefined, "Message pour Kyan, de " + Consts.title)
                }), React.createElement(GradientLinearBackground.make, {
                  style: Predefined$ReactMultiversal.styles.flex1,
                  stops: [
                    {
                      offset: Style$ReactNative.pct(0),
                      stopColor: "#01093C",
                      stopOpacity: "1"
                    },
                    {
                      offset: Style$ReactNative.pct(100),
                      stopColor: "#060C4E",
                      stopOpacity: "1"
                    }
                  ],
                  children: null
                }, React.createElement(GradientRadialBackground.make, {
                      style: {
                        height: moonLightSize,
                        left: 0,
                        position: "absolute",
                        top: 0,
                        width: moonLightSize
                      },
                      stops: [
                        {
                          offset: Style$ReactNative.pct(0),
                          stopColor: "#00F6FF",
                          stopOpacity: "0.2"
                        },
                        {
                          offset: Style$ReactNative.pct(50),
                          stopColor: "#00F6FF",
                          stopOpacity: "0"
                        }
                      ]
                    }), React.createElement("div", {
                      style: {
                        background: "url(/_/stars.png) repeat 0% 0% / 400px 300px",
                        display: "flex",
                        flexDirection: "column",
                        flexGrow: "1"
                      }
                    }, React.createElement(WebsiteHeader.make, {}), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(ReactNative.Text, {
                          children: null,
                          style: {
                            textAlign: "center",
                            maxWidth: Style$ReactNative.pct(100)
                          }
                        }, React.createElement(ReactNative.Text, {
                              children: "Salut ",
                              style: Object.assign({}, {
                                    color: "#fff",
                                    fontFamily: "StoneHarbour",
                                    fontSize: 100,
                                    lineHeight: 100
                                  }, {
                                    filter: "drop-shadow(1px 1px 1px rgba(0,0,0,0.5)) drop-shadow(2px 8px 11px rgba(254,167,183,0.22))",
                                    backgroundClip: "text",
                                    WebkitTextFillColor: "transparent",
                                    backgroundImage: "linear-gradient(0deg, #DBC469 0%, #EC6FCB 80%)"
                                  })
                            }), React.createElement(ReactNative.Text, {
                              children: " KYAN",
                              style: Object.assign({}, {
                                    color: "#fff",
                                    fontFamily: "Phosphate",
                                    fontSize: 100,
                                    lineHeight: 100,
                                    textAlign: "right"
                                  }, {
                                    WebkitTextStroke: "1px #3EF8D9",
                                    filter: "drop-shadow(0 0 14px #1DB6B2)"
                                  })
                            })), React.createElement(ReactNative.View, {
                          onLayout: onhelloWaveLayout,
                          children: React.createElement(Animated$ReactNative.View.make, {
                                style: {
                                  transform: Belt_Option.mapWithDefault(match$1[0], [], (function (layout) {
                                          return [
                                                  {
                                                    translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                          inputRange: [
                                                            0,
                                                            windowsDims.height
                                                          ],
                                                          outputRange: [
                                                            30,
                                                            -30
                                                          ],
                                                          extrapolate: "identity",
                                                          extrapolateLeft: "clamp",
                                                          extrapolateRight: "clamp"
                                                        })
                                                  },
                                                  {
                                                    rotateZ: AppWrapper.scrollYAnimatedValue.interpolate({
                                                          inputRange: [
                                                            0,
                                                            (layout.y + layout.height) / 8,
                                                            (layout.y + layout.height) / 8 * 2,
                                                            (layout.y + layout.height) / 8 * 3,
                                                            (layout.y + layout.height) / 8 * 4,
                                                            (layout.y + layout.height) / 8 * 5
                                                          ],
                                                          outputRange: [
                                                            "10deg",
                                                            "-10deg",
                                                            "10deg",
                                                            "-10deg",
                                                            "10deg",
                                                            "-10deg"
                                                          ],
                                                          extrapolate: "identity",
                                                          extrapolateLeft: "clamp",
                                                          extrapolateRight: "clamp"
                                                        })
                                                  }
                                                ];
                                        }))
                                },
                                children: React.createElement(ReactNative.Text, {
                                      children: "👋",
                                      style: {
                                        fontSize: 80,
                                        textAlign: "center"
                                      }
                                    })
                              })
                        }), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(ReactNative.View, {
                          style: [
                            Predefined$ReactMultiversal.styles.flex,
                            theme.styles.back
                          ],
                          children: React.createElement(Container$ReactMultiversal.make, {
                                style: Predefined$ReactMultiversal.styles.center,
                                children: React.createElement(SpacedView$ReactMultiversal.make, {
                                      vertical: /* L */2,
                                      horizontal: /* L */2,
                                      children: null
                                    }, React.createElement(ReactNative.Text, {
                                          children: "J'ai pas écrit ton nom pour pas me tromper sur l'emplacement du H. \nBlague à part, je me permets de t'écrire pour quelque chose de très simple mais qui me tient énormément à coeur. ",
                                          style: [
                                            Font.ios.title2,
                                            theme.styles.text
                                          ]
                                        }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ReactNative.Text, {
                                          children: "On a récemment échangé brièvement sur Insta suite à une story où je partageais des produits que j'avais acheté sur une bonne boutique, et je t'ai dit que je te re-contacterais autrement que par Insta. Et voilà !",
                                          style: [
                                            Font.ios.caption,
                                            theme.styles.text
                                          ]
                                        }))
                              })
                        }), React.createElement(Container$ReactMultiversal.make, {
                          style: Predefined$ReactMultiversal.styles.center,
                          maxWidth: 480,
                          children: React.createElement(SpacedView$ReactMultiversal.make, {
                                vertical: /* L */2,
                                horizontal: /* L */2,
                                children: React.createElement(ReactNative.Text, {
                                      children: null,
                                      style: [
                                        Font.iosEm.title1,
                                        theme.styles.textOnMain
                                      ]
                                    }, "Je fais des ", React.createElement(ReactNative.Text, {
                                          children: "LOGICIELS",
                                          style: Object.assign({}, {
                                                color: "#fff",
                                                fontFamily: "Phosphate",
                                                fontSize: 60,
                                                lineHeight: 100,
                                                textAlign: "right"
                                              }, {
                                                WebkitTextStroke: "1px #1DB6B2",
                                                filter: "drop-shadow(0 0 14px #3EF8D9)"
                                              })
                                        }), ".")
                              })
                        }), React.createElement(ReactNative.View, {
                          style: [
                            Predefined$ReactMultiversal.styles.flex,
                            theme.styles.back
                          ],
                          children: React.createElement(Container$ReactMultiversal.make, {
                                style: Predefined$ReactMultiversal.styles.center,
                                children: React.createElement(SpacedView$ReactMultiversal.make, {
                                      vertical: /* L */2,
                                      horizontal: /* L */2,
                                      children: React.createElement(ReactNative.Text, {
                                            children: "Je suis développeur. Je suis capable de coder des applications (principalement web et mobile). Comme tu aimes dire des logiciels. \n\nD'ailleurs pour que tu puisses enfin expliquer aux gens qui sourient quand tu dis logiciel: une \"application\" c'est un raccourci pour \"logiciel applicatif\", qui a une application directe pour un humain (avec une interface et des boutons), à l'inverse d'un logiciel \"système\" qui lui fait du travail sans que tu t'en rendes compte (ex: des tâches de fond qui vont vérifier si y'a des mises à jour etc).  \nTu m'apportes beaucoup de moment de rire, j'espère que je t'aurais au moins apporté cette petite explication. ",
                                            style: [
                                              Font.ios.body,
                                              theme.styles.text
                                            ]
                                          })
                                    })
                              })
                        }), React.createElement(Animated$ReactNative.View.make, {
                          onLayout: onQuote1Layout,
                          style: {
                            transform: Belt_Option.getWithDefault(Belt_Option.map(match$2[0], (function (layout) {
                                        return [
                                                {
                                                  translateZ: "0px"
                                                },
                                                {
                                                  scale: AppWrapper.scrollYAnimatedValue.interpolate({
                                                        inputRange: [
                                                          layout.y - windowsDims.height,
                                                          layout.y - windowsDims.height / 2,
                                                          layout.y - windowsDims.height / 2 + layout.height / 2,
                                                          layout.y + layout.height / 2,
                                                          layout.y + layout.height
                                                        ],
                                                        outputRange: [
                                                          0.8,
                                                          0.9,
                                                          1,
                                                          0.9,
                                                          0.8
                                                        ],
                                                        extrapolate: "identity",
                                                        extrapolateLeft: "clamp",
                                                        extrapolateRight: "clamp"
                                                      })
                                                },
                                                {
                                                  translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                        inputRange: [
                                                          layout.y - windowsDims.height,
                                                          layout.y - windowsDims.height / 2,
                                                          layout.y - windowsDims.height / 2 + layout.height / 2,
                                                          layout.y + layout.height / 2,
                                                          layout.y + layout.height
                                                        ],
                                                        outputRange: [
                                                          windowsDims.width,
                                                          layout.x < layout.width ? layout.x : layout.width,
                                                          0,
                                                          -(
                                                            layout.x < layout.width ? layout.x : layout.width
                                                          ),
                                                          -windowsDims.width
                                                        ],
                                                        extrapolate: "identity",
                                                        extrapolateLeft: "clamp",
                                                        extrapolateRight: "clamp"
                                                      })
                                                }
                                              ];
                                      })), []),
                            margin: "auto"
                          },
                          children: null
                        }, React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XL */1
                            }), React.createElement(ReactNative.Text, {
                              children: "Des fois tu parles à des",
                              style: {
                                color: "#fff",
                                fontFamily: "Arial",
                                fontSize: 20
                              }
                            }), React.createElement(ReactNative.Text, {
                              children: "GENS,",
                              style: {
                                color: "#fff",
                                fontFamily: "Phosphate",
                                fontSize: 85
                              }
                            }), React.createElement(ReactNative.Text, {
                              children: "Tu leur dis t'utilises un",
                              style: {
                                color: "#fff",
                                fontFamily: "Arial",
                                fontSize: 21.5
                              }
                            }), React.createElement(ReactNative.Text, {
                              children: "LOGICIEL,",
                              style: {
                                color: "#fff",
                                fontFamily: "Phosphate",
                                fontSize: 50
                              }
                            }), React.createElement(ReactNative.Text, {
                              children: "ils te disent c'est une application",
                              style: {
                                color: "#fff",
                                fontFamily: "Arial",
                                fontSize: 15
                              }
                            }), React.createElement(ReactNative.Text, {
                              children: "mais en fait c'est pas une",
                              style: {
                                color: "#fff",
                                fontFamily: "Arial",
                                fontSize: 19
                              }
                            }), React.createElement(ReactNative.Text, {
                              children: "APPLICATION.",
                              style: {
                                color: "#fff",
                                fontFamily: "Phosphate",
                                fontSize: 36
                              }
                            }), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XL */1
                            })), React.createElement(ReactNative.View, {
                          style: [
                            Predefined$ReactMultiversal.styles.flex,
                            theme.styles.back
                          ],
                          children: React.createElement(Container$ReactMultiversal.make, {
                                style: Predefined$ReactMultiversal.styles.center,
                                children: React.createElement(SpacedView$ReactMultiversal.make, {
                                      vertical: /* L */2,
                                      horizontal: /* L */2,
                                      children: React.createElement(ReactNative.Text, {
                                            children: "On s'est déjà parlé, vite fait.",
                                            style: [
                                              Font.iosEm.title1,
                                              theme.styles.textMain
                                            ]
                                          })
                                    })
                              })
                        }), React.createElement(Container$ReactMultiversal.make, {
                          style: Predefined$ReactMultiversal.styles.center,
                          maxWidth: 480,
                          children: React.createElement(SpacedView$ReactMultiversal.make, {
                                vertical: /* L */2,
                                horizontal: /* L */2,
                                children: React.createElement(ReactNative.Text, {
                                      children: "C'était trop bref (🙃) et j'ai pas eu le courage de te trop te parler. \n\nBon en même temps c'était après un spectacle (à Montauban) où tu avais envoyé masse d'énergie positive, puis quasi 1h de dédicaces et selfies, donc j'ai pas voulu te souler. \n\nJe me suis dit que je trouverais plus original. J'espère que cette page web l'est! ",
                                      style: [
                                        Font.ios.body,
                                        theme.styles.textOnMain
                                      ]
                                    })
                              })
                        }), React.createElement(Container$ReactMultiversal.make, {
                          style: Predefined$ReactMultiversal.styles.center,
                          children: null
                        }, React.createElement("div", {
                              dangerouslySetInnerHTML: {
                                __html: "<blockquote class=\"instagram-media\" data-instgrm-permalink=\"https://www.instagram.com/p/CUkd6XZoKRH/?utm_source=ig_embed&amp;utm_campaign=loading\" data-instgrm-version=\"14\" style=\" background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);\"><div style=\"padding:16px;\"> <a href=\"https://www.instagram.com/p/CUkd6XZoKRH/?utm_source=ig_embed&amp;utm_campaign=loading\" style=\" background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;\" target=\"_blank\"> <div style=\" display: flex; flex-direction: row; align-items: center;\"> <div style=\"background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;\"></div> <div style=\"display: flex; flex-direction: column; flex-grow: 1; justify-content: center;\"> <div style=\" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;\"></div> <div style=\" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;\"></div></div></div><div style=\"padding: 19% 0;\"></div> <div style=\"display:block; height:50px; margin:0 auto 12px; width:50px;\"><svg width=\"50px\" height=\"50px\" viewBox=\"0 0 60 60\" version=\"1.1\" xmlns=\"https://www.w3.org/2000/svg\" xmlns:xlink=\"https://www.w3.org/1999/xlink\"><g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-511.000000, -20.000000)\" fill=\"#000000\"><g><path d=\"M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631\"></path></g></g></g></svg></div><div style=\"padding-top: 8px;\"> <div style=\" color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;\">View this post on Instagram</div></div><div style=\"padding: 12.5% 0;\"></div> <div style=\"display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;\"><div> <div style=\"background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);\"></div> <div style=\"background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;\"></div> <div style=\"background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);\"></div></div><div style=\"margin-left: 8px;\"> <div style=\" background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;\"></div> <div style=\" width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)\"></div></div><div style=\"margin-left: auto;\"> <div style=\" width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);\"></div> <div style=\" background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);\"></div> <div style=\" width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);\"></div></div></div> <div style=\"display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;\"> <div style=\" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;\"></div> <div style=\" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;\"></div></div></a><p style=\" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;\"><a href=\"https://www.instagram.com/p/CUkd6XZoKRH/?utm_source=ig_embed&amp;utm_campaign=loading\" style=\" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;\" target=\"_blank\">A post shared by Max (@mooxitoh)</a></p></div></blockquote>"
                              }
                            }), React.createElement(Head, {
                              children: React.createElement("script", {
                                    src: "https:////www.instagram.com/embed.js"
                                  })
                            })), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(Container$ReactMultiversal.make, {
                          style: Predefined$ReactMultiversal.styles.center,
                          children: React.createElement(SpacedView$ReactMultiversal.make, {
                                style: [
                                  Predefined$ReactMultiversal.styles.flex,
                                  Predefined$ReactMultiversal.styles.center
                                ],
                                children: React.createElement(ReactNative.Text, {
                                      children: "Merci pour tout ",
                                      style: Object.assign({}, {
                                            color: "#fff",
                                            fontFamily: "StoneHarbour",
                                            fontSize: 100,
                                            lineHeight: 100,
                                            textAlign: "center"
                                          }, {
                                            filter: "drop-shadow(1px 1px 1px rgba(0,0,0,0.5)) drop-shadow(2px 8px 11px rgba(254,167,183,0.22))",
                                            backgroundClip: "text",
                                            WebkitTextFillColor: "transparent",
                                            backgroundImage: "linear-gradient(0deg, #DBC469 0%, #EC6FCB 80%)"
                                          })
                                    })
                              })
                        }), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XXL */0
                        }), React.createElement(ReactNative.View, {
                          onLayout: onThanksCardLayout,
                          children: React.createElement(Container$ReactMultiversal.make, {
                                style: Predefined$ReactMultiversal.styles.center,
                                maxWidth: 600,
                                children: React.createElement(ReactNative.View, {
                                      style: {
                                        margin: "auto",
                                        marginRight: 0,
                                        maxWidth: 450,
                                        width: Style$ReactNative.pct(100)
                                      },
                                      children: null
                                    }, React.createElement(Spacer$ReactMultiversal.make, {
                                          size: /* L */2
                                        }), React.createElement(Animated$ReactNative.View.make, {
                                          style: [
                                            ReactNative.StyleSheet.absoluteFill,
                                            Object.assign({}, {
                                                  backgroundColor: "#190349",
                                                  transform: Belt_Option.mapWithDefault(match$4[0], [], (function (layout) {
                                                          return [
                                                                  {
                                                                    translateZ: "-1000px"
                                                                  },
                                                                  {
                                                                    translateY: -60
                                                                  },
                                                                  {
                                                                    perspective: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                          inputRange: [
                                                                            layout.y - windowsDims.height,
                                                                            layout.y + layout.height
                                                                          ],
                                                                          outputRange: [
                                                                            650,
                                                                            750
                                                                          ],
                                                                          extrapolate: "identity",
                                                                          extrapolateLeft: "clamp",
                                                                          extrapolateRight: "clamp"
                                                                        })
                                                                  },
                                                                  {
                                                                    rotateX: Style$ReactNative.deg(-10)
                                                                  },
                                                                  {
                                                                    rotateY: Style$ReactNative.deg(10)
                                                                  },
                                                                  {
                                                                    rotateZ: AppWrapper.scrollYAnimatedValue.interpolate({
                                                                          inputRange: [
                                                                            layout.y - windowsDims.height,
                                                                            layout.y + layout.height
                                                                          ],
                                                                          outputRange: [
                                                                            "-5deg",
                                                                            "5deg"
                                                                          ],
                                                                          extrapolate: "identity",
                                                                          extrapolateLeft: "clamp",
                                                                          extrapolateRight: "clamp"
                                                                        })
                                                                  }
                                                                ];
                                                        }))
                                                }, {
                                                  filter: "drop-shadow(0px 10px 20px rgba(0,0,0,0.5))",
                                                  backgroundImage: "linear-gradient(0deg, #190349 0%, #49007B 100%)"
                                                })
                                          ]
                                        }), React.createElement(ReactNative.View, {
                                          style: {
                                            transform: [{
                                                translateZ: "0px"
                                              }],
                                            margin: "auto",
                                            maxWidth: 280
                                          },
                                          children: null
                                        }, React.createElement(ReactNative.Text, {
                                              children: "Je sais que tu aimes remercier les gens (en plus de les faire kiffer) et tu as bien raison.\nJe te remercie à mon tour, car j'ai été très touché par tes spectacles. Ton travail m'épates et m'inspires énormément.\nLe fait que tu travailles avec Navo (que je suis depuis la \"Bande Pas Dessinée\") me fait kiffer encore plus. Vous faites des choses fantastiques.\n\nD'ailleurs, la Bande Pas Dessinée est toujours dans mes toilettes - en version papier - mais pas pour s'essuyer, et elle est maintenant accompagnée de ton spectacle \"Pulsions\" illustré par Boulet, pour que je passe toujours de petits bons moments, plusieurs fois par jour (moi aussi je mange beaucoup de fruits et légumes).\n\nBref, merci pour ton travail.",
                                              style: [
                                                Font.ios.body,
                                                theme.styles.textOnMain
                                              ]
                                            }), React.createElement(Spacer$ReactMultiversal.make, {
                                              size: /* XL */1
                                            }), React.createElement(Spacer$ReactMultiversal.make, {
                                              size: /* XL */1
                                            })))
                              })
                        }), React.createElement(Container$ReactMultiversal.make, {
                          children: React.createElement(SpacedView$ReactMultiversal.make, {
                                vertical: /* None */7,
                                children: null
                              }, React.createElement(ReactNative.Text, {
                                    children: null,
                                    style: [
                                      Font.iosEm.title1,
                                      theme.styles.textOnMain
                                    ]
                                  }, "Je suis ", "\n", React.createElement(ReactNative.Text, {
                                        children: "développeur créatif",
                                        style: Object.assign({}, {
                                              color: "#fff",
                                              fontFamily: "StoneHarbour",
                                              fontSize: 60,
                                              lineHeight: 100,
                                              textAlign: "right"
                                            }, {
                                              WebkitTextStroke: "1px #1DB6B2",
                                              filter: "drop-shadow(0 0 14px #3EF8D9)"
                                            })
                                      }), "\n", "qui aime les humains."), React.createElement(ReactNative.Text, {
                                    children: "a",
                                    style: Object.assign({}, {
                                          fontFamily: "StoneHarbourWash",
                                          fontSize: 150,
                                          lineHeight: 150,
                                          textAlign: "center"
                                        }, {
                                          filter: "drop-shadow(1px 1px 1px rgba(0,0,0,0.5)) drop-shadow(2px 8px 11px rgba(254,167,183,0.22))",
                                          backgroundImage: "linear-gradient(50deg, #EC6FCB 0%, #DBC469 60%)",
                                          WebkitTextStroke: "0.5px #A56C99",
                                          backgroundClip: "text",
                                          WebkitTextFillColor: "transparent"
                                        })
                                  }))
                        }), React.createElement(ReactNative.View, {
                          style: [
                            Predefined$ReactMultiversal.styles.flex,
                            theme.styles.back
                          ],
                          children: React.createElement(Container$ReactMultiversal.make, {
                                style: Predefined$ReactMultiversal.styles.center,
                                children: React.createElement(SpacedView$ReactMultiversal.make, {
                                      vertical: /* L */2,
                                      children: React.createElement(ReactNative.Text, {
                                            children: "Indépendant à mon propre compte, je fais des apps mobile et des sites web avec des technologies innovantes (“React” notamment). Par altruisme, j'ai écrit beaucoup de code open source, utilisé par des millions de personnes, jusqu'à des grosses entreprises américaines.\n\nLe développement, c’est un kiff que j’ai commencé ado (quand je n’étais pas au théâtre) à travers un site de soluces pour la série de jeux Zelda (et ta voix off dans une certaine vidéo de Paul me fait croire que tu affectionnes aussi cette série).\nEt depuis j'ai aquis de l'XP tout plein. J'espère que cheveux blancs sont signe de ma sagesse... 😁\n",
                                            style: [
                                              Font.ios.body,
                                              theme.styles.text
                                            ]
                                          })
                                    })
                              })
                        }), React.createElement(Container$ReactMultiversal.make, {
                          style: Predefined$ReactMultiversal.styles.center,
                          maxWidth: 480,
                          children: React.createElement(SpacedView$ReactMultiversal.make, {
                                vertical: /* L */2,
                                horizontal: /* L */2,
                                children: React.createElement(ReactNative.Text, {
                                      children: "Au fur et à mesure de ma carrière, j'ai toujours refusé de bosser pour des grosses entreprises telles que Facebook, Google & co par soucis éthique.\nJe préfère privilégier les projets à taille humaine, mais plus ça va plus j'ai de mal à trouver, paradoxalement peut être à cause de ma spécialisation dans certaines technologies.\n",
                                      style: [
                                        Font.ios.body,
                                        theme.styles.textOnMain
                                      ]
                                    })
                              })
                        }), React.createElement(ReactNative.Text, {
                          children: "🤗",
                          style: {
                            fontSize: 80,
                            textAlign: "center"
                          }
                        }), React.createElement(Container$ReactMultiversal.make, {
                          style: Predefined$ReactMultiversal.styles.center,
                          maxWidth: 480,
                          children: null
                        }, React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* L */2,
                              horizontal: /* L */2,
                              children: React.createElement(ReactNative.Text, {
                                    children: "\nMais avant d'être développeur, je suis un artiste passionné. Entre autres, j'ai toujours dessiné pendant la plupart de mes cours pendant mes études.\nC'est pour cela qu'avec le temps, je suis me suis concentré sur la partie selon moi la plus créative des applications: les interfaces graphiques.\nJ'aime quand c'est vivant, quand ça bouge et que c'est bien réfléchi.\n",
                                    style: [
                                      Font.ios.body,
                                      theme.styles.textOnMain
                                    ]
                                  })
                            }), React.createElement(ReactNative.Text, {
                              children: "🧑‍🎨",
                              style: {
                                fontSize: 80,
                                textAlign: "center"
                              }
                            })), React.createElement(ReactNative.View, {
                          style: [
                            Predefined$ReactMultiversal.styles.flex,
                            theme.styles.back
                          ],
                          children: React.createElement(Container$ReactMultiversal.make, {
                                style: Predefined$ReactMultiversal.styles.center,
                                children: React.createElement(SpacedView$ReactMultiversal.make, {
                                      vertical: /* L */2,
                                      children: React.createElement(ReactNative.Text, {
                                            children: "À côté de ça, l'humour c'est quelque chose que j'ai toujours eu dans le sang (quand j'étais boy-scout, j'ai eu mon badge de saltimbanque, si ça c'est pas une preuve 😂) mais c'est quelque chose que j'ai perdu malgré moi, suite à un mauvais enchainement d'épreuves difficiles de la vie.\n                \nAprès un travail sur moi salvateur, j'ai enfin eu un regain d'énergie. Je me suis même lancé dans le stand-up tout récemment!\nJ'ai épluché toutes les heures de podcasts que j'ai pu dénicher (Des Gens qui doutent, jusqu'au Café au Lot7) où tu parles autour du stand-up, de l'écriture & co pour me lancer.\nTout cela m'a énormément servi. Merci pour ces heures de partage. Mais ce n'est pas pour ça que je te contacte.\n",
                                            style: [
                                              Font.ios.body,
                                              theme.styles.text
                                            ]
                                          })
                                    })
                              })
                        }), React.createElement(Container$ReactMultiversal.make, {
                          maxWidth: 480,
                          children: React.createElement(SpacedView$ReactMultiversal.make, {
                                vertical: /* XL */1,
                                children: React.createElement(ReactNative.Text, {
                                      children: "J'aimerais travailler avec des bons gens comme toi.",
                                      style: [
                                        Font.iosEm.largeTitle,
                                        theme.styles.textOnMain
                                      ]
                                    })
                              })
                        }), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XL */1
                        }), React.createElement(ReactNative.View, {
                          onLayout: onLikeYouLayout,
                          style: {
                            margin: "auto",
                            maxWidth: 750,
                            width: Style$ReactNative.pct(100)
                          },
                          children: null
                        }, React.createElement(ReactNative.View, {
                              style: [
                                ReactNative.StyleSheet.absoluteFill,
                                {
                                  transform: [
                                    {
                                      skewY: skewYValue
                                    },
                                    {
                                      translateZ: "0px"
                                    }
                                  ]
                                },
                                theme.styles.back
                              ]
                            }), React.createElement(Animated$ReactNative.View.make, {
                              style: Object.assign({}, {
                                    opacity: 0.85,
                                    transform: Belt_Option.mapWithDefault(likeYouLayout, [], (function (layout) {
                                            return [
                                                    {
                                                      translateZ: "0px"
                                                    },
                                                    {
                                                      skewY: skewYValue
                                                    },
                                                    {
                                                      translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                            inputRange: [
                                                              layout.y - windowsDims.height,
                                                              layout.y + layout.height
                                                            ],
                                                            outputRange: [
                                                              -40,
                                                              20
                                                            ],
                                                            extrapolate: "identity",
                                                            extrapolateLeft: "clamp",
                                                            extrapolateRight: "clamp"
                                                          })
                                                    }
                                                  ];
                                          })),
                                    height: 10,
                                    left: Style$ReactNative.pct(40),
                                    position: "absolute",
                                    top: 30,
                                    width: 80
                                  }, {
                                    backgroundImage: "linear-gradient(180deg, #268EC4 0%, #2C1A6E 100%)"
                                  })
                            }), React.createElement(Animated$ReactNative.View.make, {
                              style: Object.assign({}, {
                                    opacity: 0.5,
                                    transform: Belt_Option.mapWithDefault(likeYouLayout, [], (function (layout) {
                                            return [
                                                    {
                                                      translateZ: "0px"
                                                    },
                                                    {
                                                      skewY: skewYValue
                                                    },
                                                    {
                                                      translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                            inputRange: [
                                                              layout.y - windowsDims.height,
                                                              layout.y + layout.height
                                                            ],
                                                            outputRange: [
                                                              20,
                                                              -20
                                                            ],
                                                            extrapolate: "identity",
                                                            extrapolateLeft: "clamp",
                                                            extrapolateRight: "clamp"
                                                          })
                                                    }
                                                  ];
                                          })),
                                    height: 15,
                                    left: Style$ReactNative.pct(45),
                                    position: "absolute",
                                    top: 28,
                                    width: 120
                                  }, {
                                    backgroundImage: "linear-gradient(180deg, #0B5F90 0%, #23C3AF 100%)"
                                  })
                            }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* XXL */0,
                              horizontal: /* L */2,
                              style: {
                                transform: [{
                                    translateZ: "0px"
                                  }],
                                margin: "auto",
                                maxWidth: 400
                              },
                              children: null
                            }, React.createElement(ReactNative.Text, {
                                  children: "Aujourd'hui j'aimerais aller plus loin et en me rapprochant du milieu de “l’entertainement” et en particulier du monde humoristique via ma profession.\nJ’aimerais vraiment utiliser mes compétences professionnelles afin d'apporter plus de fun dans notre monde. Moi aussi j'ai envie de faire kiffer les gens, peu importe que ce soit dans l'ombre ou pas.",
                                  style: [
                                    Font.ios.body,
                                    theme.styles.text
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* M */3
                                })), React.createElement(Animated$ReactNative.View.make, {
                              style: Object.assign({}, {
                                    opacity: 0.95,
                                    transform: Belt_Option.mapWithDefault(likeYouLayout, [], (function (layout) {
                                            return [
                                                    {
                                                      translateZ: "0px"
                                                    },
                                                    {
                                                      skewY: skewYValue
                                                    },
                                                    {
                                                      translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                            inputRange: [
                                                              layout.y - windowsDims.height,
                                                              layout.y + layout.height
                                                            ],
                                                            outputRange: [
                                                              -50,
                                                              50
                                                            ],
                                                            extrapolate: "identity",
                                                            extrapolateLeft: "clamp",
                                                            extrapolateRight: "clamp"
                                                          })
                                                    }
                                                  ];
                                          })),
                                    bottom: -10,
                                    height: 20,
                                    left: Style$ReactNative.pct(-5),
                                    position: "absolute",
                                    width: 140
                                  }, {
                                    backgroundImage: "linear-gradient(180deg, #268EC4 0%, #2C1A6E 100%)"
                                  })
                            }), React.createElement(Animated$ReactNative.View.make, {
                              style: [Object.assign({}, {
                                      opacity: 0.85,
                                      transform: Belt_Option.mapWithDefault(likeYouLayout, [], (function (layout) {
                                              return [
                                                      {
                                                        translateZ: "0px"
                                                      },
                                                      {
                                                        skewY: skewYValue
                                                      },
                                                      {
                                                        translateX: AppWrapper.scrollYAnimatedValue.interpolate({
                                                              inputRange: [
                                                                layout.y - windowsDims.height,
                                                                layout.y + layout.height
                                                              ],
                                                              outputRange: [
                                                                50,
                                                                -50
                                                              ],
                                                              extrapolate: "identity",
                                                              extrapolateLeft: "clamp",
                                                              extrapolateRight: "clamp"
                                                            })
                                                      }
                                                    ];
                                            })),
                                      bottom: 20,
                                      height: 10,
                                      left: Style$ReactNative.pct(10),
                                      position: "absolute",
                                      width: 80
                                    }, {
                                      backgroundImage: "linear-gradient(180deg, #0B5F90 0%, #23C3AF 100%)"
                                    })]
                            })), React.createElement(Spacer$ReactMultiversal.make, {
                          size: /* XL */1
                        }), React.createElement(Container$ReactMultiversal.make, {
                          style: Predefined$ReactMultiversal.styles.center,
                          maxWidth: 480,
                          children: null
                        }, React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* L */2,
                              horizontal: /* L */2,
                              children: React.createElement(ReactNative.Text, {
                                    children: "Alors si tu as un besoin quelconque (pour toi ou plus largement FKLG et ses amis) et que tu cherches un développeur créatif, à l'écoute et disponible, je serais plus que ravi de pouvoir bosser avec toi ou tes équipes.\nÇa peut être pour un site (ton site perso, ta boutique ou un autre projet), une appli, ou même du fictif pour vos productions, car je sais que c’est un besoin récurrent (j'ai inventé ce dernier point pour donner de l'importance à mon propos).\n\nJ’aimerais vraiment une réponse de ta part, même si c'est pour me dire que tu n'es pas intéressé. J'en tirerais certainement du positif.\n",
                                    style: [
                                      Font.ios.body,
                                      theme.styles.textOnMain
                                    ]
                                  })
                            }), React.createElement(ReactNative.Text, {
                              children: "🙏",
                              style: {
                                fontSize: 80,
                                textAlign: "center"
                              }
                            }), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* L */2
                            })), React.createElement(ReactNative.View, {
                          style: [
                            Predefined$ReactMultiversal.styles.flex,
                            theme.styles.back
                          ],
                          children: React.createElement(Container$ReactMultiversal.make, {
                                style: Predefined$ReactMultiversal.styles.center,
                                children: React.createElement(SpacedView$ReactMultiversal.make, {
                                      vertical: /* L */2,
                                      children: null
                                    }, React.createElement(ReactNative.Text, {
                                          children: "S'il te plaît, n'hésite surtout pas à passer mon contact autour de toi si tu parles à des gens qui sont des bons gens avec de bons besoins, ça serait fou.\nJe vais surement contacter d'autres artistes suite à ce message, mais tu es vraiment la personne qui m'a motivé, j'ai donc naturellement souhaité t'en parler en premier.\n\nComme à souvent dit Navo, si tu veux être auteur, dit que tu es auteur, personne le dira à ta place.\n\nJe suis développeur créatif pour des gens créatifs comme toi.\n\nMerci en tout cas pour tout ce que tu amènes partout où tu bosses !\n",
                                          style: [
                                            Font.ios.body,
                                            theme.styles.text
                                          ]
                                        }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ReactNative.Text, {
                                          children: "PS: Vanille pécan c'est la vie.",
                                          style: [
                                            Font.ios.caption,
                                            theme.styles.text
                                          ]
                                        }), React.createElement(ReactNative.Text, {
                                          children: "PS 2: Une console moins bien que la Game Cube. Je dénonce.",
                                          style: [
                                            Font.ios.caption2,
                                            theme.styles.text
                                          ]
                                        }), React.createElement(ReactNative.Text, {
                                          children: "PS 3: Tu devrais pouvoir retirer le lien Google+ dans le footer de ton site perso, vu que Google+ n'existe plus :)",
                                          style: [
                                            Font.ios.caption2,
                                            theme.styles.text
                                          ]
                                        }), React.createElement(Spacer$ReactMultiversal.make, {
                                          size: /* L */2
                                        }), React.createElement(ReactNative.Text, {
                                          children: "Merci de m'avoir lu.",
                                          style: [
                                            Font.iosEm.title1,
                                            theme.styles.textMain
                                          ]
                                        }))
                              })
                        }), React.createElement(Container$ReactMultiversal.make, {
                          style: Predefined$ReactMultiversal.styles.center,
                          maxWidth: 480,
                          children: React.createElement(SpacedView$ReactMultiversal.make, {
                                vertical: /* L */2,
                                horizontal: /* L */2,
                                children: null
                              }, React.createElement(ReactNative.Text, {
                                    children: "Si tu as lu jusque ici, je t'en suis reconnaissant. J'ai codé cette page entièrement avec mes petits doigts. Merci.",
                                    style: [
                                      Font.ios.body,
                                      theme.styles.textOnMain
                                    ]
                                  }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(TextLink.make, {
                                    children: "Même que le code source il accessible en cliquant ici si tu oses.",
                                    href: "https://github.com/MoOx/moox/blob/main/src/pages/_/messages/PageMessageForKyan.res",
                                    style: [
                                      Font.ios.caption,
                                      theme.styles.textOnMain,
                                      {
                                        textDecorationLine: "underline"
                                      }
                                    ]
                                  }))
                        }), React.createElement(Container$ReactMultiversal.make, {
                          children: React.createElement(SpacedView$ReactMultiversal.make, {
                                children: null
                              }, React.createElement(ReactNative.Text, {
                                    children: "Bonne tournée!",
                                    style: [
                                      Font.iosEm.title1,
                                      theme.styles.textOnMain
                                    ]
                                  }), React.createElement(ReactNative.Text, {
                                    children: "Si elle est pas fini quand tu lis ce message.",
                                    style: [
                                      Font.ios.caption,
                                      theme.styles.textOnMain
                                    ]
                                  }))
                        }), React.createElement(ReactNative.View, {
                          onLayout: onPunchsLayout,
                          children: React.createElement(ReactNative.Pressable, {
                                children: (function (param) {
                                    return React.createElement(React.Fragment, undefined, React.createElement(Spacer$ReactMultiversal.make, {
                                                    size: /* XL */1
                                                  }), React.createElement(Animated$ReactNative.View.make, {
                                                    style: [
                                                      Predefined$ReactMultiversal.styles.rowCenter,
                                                      {
                                                        transform: [{
                                                            scale: punchsReboundStarsAnimatedValue.current
                                                          }]
                                                      }
                                                    ],
                                                    children: null
                                                  }, React.createElement(ReactNative.Text, {
                                                        children: "🌟",
                                                        style: {
                                                          fontSize: 20,
                                                          textAlign: "center"
                                                        }
                                                      }), React.createElement(ReactNative.Text, {
                                                        children: " 🌟 ",
                                                        style: {
                                                          fontSize: 35,
                                                          textAlign: "center",
                                                          marginTop: -20
                                                        }
                                                      }), React.createElement(ReactNative.Text, {
                                                        children: "🌟",
                                                        style: {
                                                          fontSize: 25,
                                                          textAlign: "center"
                                                        }
                                                      })), React.createElement(ReactNative.View, {
                                                    style: Predefined$ReactMultiversal.styles.rowCenter,
                                                    children: null
                                                  }, React.createElement(Animated$ReactNative.View.make, {
                                                        style: {
                                                          transform: [
                                                            {
                                                              translateZ: "0px"
                                                            },
                                                            {
                                                              translateX: punchsReboundAnimatedValue.current
                                                            }
                                                          ]
                                                        },
                                                        children: React.createElement(ReactNative.Text, {
                                                              children: "🤜",
                                                              style: {
                                                                fontSize: 80,
                                                                textAlign: "center"
                                                              }
                                                            })
                                                      }), React.createElement(Animated$ReactNative.View.make, {
                                                        style: {
                                                          transform: [
                                                            {
                                                              translateZ: "0px"
                                                            },
                                                            {
                                                              translateX: punchsReboundAnimatedValueReverse
                                                            }
                                                          ]
                                                        },
                                                        children: React.createElement(ReactNative.Text, {
                                                              children: "🤛",
                                                              style: {
                                                                fontSize: 80,
                                                                textAlign: "center"
                                                              }
                                                            })
                                                      })), React.createElement(Spacer$ReactMultiversal.make, {
                                                    size: /* XL */1
                                                  }));
                                  }),
                                onPress: (function (param) {
                                    Curry._1(punchsReboundAction, undefined);
                                    MatomoNext.push([
                                          "trackEvent",
                                          "message-pour-kyan",
                                          "tap",
                                          "punch"
                                        ]);
                                    
                                  })
                              })
                        }), React.createElement(Container$ReactMultiversal.make, {
                          children: null
                        }, React.createElement(SpacedView$ReactMultiversal.make, {
                              children: null
                            }, React.createElement(ReactNative.Text, {
                                  children: "N'hésite pas à me répondre.",
                                  style: [
                                    Font.iosEm.title1,
                                    theme.styles.textOnMain
                                  ]
                                }), React.createElement(ReactNative.Text, {
                                  children: "Si tu as la moindre questions, n'hésites surtout pas.",
                                  style: [
                                    Font.ios.body,
                                    theme.styles.textOnMain
                                  ]
                                }), React.createElement(Spacer$ReactMultiversal.make, {
                                  size: /* L */2
                                }), React.createElement(ViewLink.make, {
                                  href: "https://moox.io",
                                  style: Predefined$ReactMultiversal.styles.rowCenter,
                                  children: null
                                }, React.createElement(Avatar.make, {
                                      size: 40,
                                      borderWidth: 2,
                                      borderColor: "#000"
                                    }), React.createElement(ReactNative.Text, {
                                      children: null,
                                      style: [
                                        Font.ios.title2,
                                        theme.styles.textOnMain
                                      ]
                                    }, " ", React.createElement(ReactNative.Text, {
                                          children: "@MoOx",
                                          style: [
                                            Font.weight[800],
                                            {
                                              textDecorationLine: "underline"
                                            }
                                          ]
                                        }), " le développeur")), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ViewLink.make, {
                                  href: "https://instagram.com/max__carre",
                                  style: Predefined$ReactMultiversal.styles.rowCenter,
                                  children: null
                                }, React.createElement(Avatar.make, {
                                      size: 35,
                                      borderWidth: 2,
                                      borderColor: "#000",
                                      uri: "https://d1fdloi71mui9q.cloudfront.net/KtJ2oMEQeiCQsKBACeoj_u2DQHHRkGOmGiXpH"
                                    }), React.createElement(ReactNative.Text, {
                                      children: null,
                                      style: [
                                        Font.ios.body,
                                        theme.styles.textOnMain
                                      ]
                                    }, "  ", React.createElement(ReactNative.Text, {
                                          children: "Max Carré",
                                          style: [
                                            Font.weight[500],
                                            {
                                              textDecorationLine: "underline"
                                            }
                                          ]
                                        }), " le stand-upper")), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ViewLink.make, {
                                  href: "https://www.instagram.com/mooxitoh",
                                  style: Predefined$ReactMultiversal.styles.rowCenter,
                                  children: null
                                }, React.createElement(Avatar.make, {
                                      size: 30,
                                      borderWidth: 2,
                                      borderColor: "#000",
                                      uri: "https://d1fdloi71mui9q.cloudfront.net/Ozz0FABtToK7wu1R74Mi_1N3jc2z6me31Btmf"
                                    }), React.createElement(ReactNative.Text, {
                                      children: null,
                                      style: [
                                        Font.ios.callout,
                                        Font.weight[200],
                                        theme.styles.textOnMain
                                      ]
                                    }, "  ", React.createElement(ReactNative.Text, {
                                          children: "@mooxitoh",
                                          style: [{
                                              textDecorationLine: "underline"
                                            }]
                                        }), " l'humain créatif"))), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* S */4,
                              children: React.createElement(ViewLink.make, {
                                    href: "sms:+33678135439",
                                    children: React.createElement(ButtonContained$ReactMultiversal.make, {
                                          color: "#1FCE26",
                                          style: styles.button,
                                          children: null
                                        }, React.createElement(SVGSpeechBubbles.make, {
                                              width: 36,
                                              height: 36,
                                              fill: Consts.Colors.light
                                            }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ButtonContained$ReactMultiversal.$$Text.make, {
                                              textSize: 24,
                                              children: null
                                            }, "Par SMS", React.createElement(ReactNative.Text, {
                                                  children: "\n06 78 13 54 39",
                                                  style: {
                                                    fontSize: 12,
                                                    fontWeight: "300",
                                                    lineHeight: 12
                                                  }
                                                }))),
                                    onPress: (function (param) {
                                        MatomoNext.push([
                                              "trackEvent",
                                              "message-pour-kyan",
                                              "contact",
                                              "sms"
                                            ]);
                                        
                                      })
                                  })
                            }), React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* S */4,
                              children: React.createElement(ViewLink.make, {
                                    href: "mailto:" + (
                                      match[0] ? "max.email-vip-pour-kyan@moox.fr" : ""
                                    ),
                                    children: React.createElement(ButtonContained$ReactMultiversal.make, {
                                          color: Predefined$ReactMultiversal.Colors.Ios.light.blue,
                                          style: styles.button,
                                          children: null
                                        }, React.createElement(SVGEmail.make, {
                                              width: 36,
                                              height: 36,
                                              fill: Consts.Colors.light
                                            }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ButtonContained$ReactMultiversal.$$Text.make, {
                                              textSize: 24,
                                              children: null
                                            }, "Par Email", React.createElement(ReactNative.Text, {
                                                  children: "\nmax.email-vip-pour-kyan @ moox.fr",
                                                  style: {
                                                    fontSize: 12,
                                                    fontWeight: "300",
                                                    lineHeight: 12
                                                  }
                                                }))),
                                    onPress: (function (param) {
                                        MatomoNext.push([
                                              "trackEvent",
                                              "message-pour-kyan",
                                              "contact",
                                              "mail"
                                            ]);
                                        
                                      })
                                  })
                            }), React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* S */4,
                              children: React.createElement(ViewLink.make, {
                                    href: "tel:+33678135439",
                                    children: React.createElement(ButtonContained$ReactMultiversal.make, {
                                          color: "#1FCE26",
                                          style: styles.button,
                                          children: null
                                        }, React.createElement(SVGPhone.make, {
                                              width: 36,
                                              height: 36,
                                              fill: Consts.Colors.light
                                            }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ButtonContained$ReactMultiversal.$$Text.make, {
                                              textSize: 24,
                                              children: null
                                            }, "Par téléphone ", React.createElement(ReactNative.Text, {
                                                  children: "\n(Je rêve peut-être, mais bon, j'ai jeté mon réveil, alors...)",
                                                  style: {
                                                    fontSize: 12,
                                                    fontWeight: "300",
                                                    lineHeight: 12
                                                  }
                                                }))),
                                    onPress: (function (param) {
                                        MatomoNext.push([
                                              "trackEvent",
                                              "message-pour-kyan",
                                              "contact",
                                              "tel"
                                            ]);
                                        
                                      })
                                  })
                            }), React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* S */4,
                              children: React.createElement(ViewLink.make, {
                                    href: "https://twitter.com/MoOx",
                                    children: React.createElement(ButtonContained$ReactMultiversal.make, {
                                          color: "rgb(0, 112, 201)",
                                          style: styles.button,
                                          children: null
                                        }, React.createElement(SVGSocialTwitter.make, {
                                              width: 36,
                                              height: 36,
                                              fill: Consts.Colors.light
                                            }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ButtonContained$ReactMultiversal.$$Text.make, {
                                              textSize: 24,
                                              children: null
                                            }, "Via un gazouilli", React.createElement(ReactNative.Text, {
                                                  children: "\n@MoOx on Twitter",
                                                  style: {
                                                    fontSize: 12,
                                                    fontWeight: "300",
                                                    lineHeight: 12
                                                  }
                                                }))),
                                    onPress: (function (param) {
                                        MatomoNext.push([
                                              "trackEvent",
                                              "message-pour-kyan",
                                              "contact",
                                              "twitter"
                                            ]);
                                        
                                      })
                                  })
                            }), React.createElement(SpacedView$ReactMultiversal.make, {
                              vertical: /* S */4,
                              children: React.createElement(ViewLink.make, {
                                    href: "https://moox.io/MaximeThirouin.vcf",
                                    children: React.createElement(ButtonContained$ReactMultiversal.make, {
                                          color: Predefined$ReactMultiversal.Colors.Ios.light.pink,
                                          style: styles.button,
                                          children: null
                                        }, React.createElement(SVGContact.make, {
                                              width: 36,
                                              height: 36,
                                              fill: Consts.Colors.light
                                            }), React.createElement(Spacer$ReactMultiversal.make, {}), React.createElement(ButtonContained$ReactMultiversal.$$Text.make, {
                                              textSize: 24,
                                              children: null
                                            }, "Télécharge moi!", React.createElement(ReactNative.Text, {
                                                  children: "\nTu peux aussi sauvegarder mon contact, au cas où.",
                                                  style: {
                                                    fontSize: 12,
                                                    fontWeight: "300",
                                                    lineHeight: 12
                                                  }
                                                }))),
                                    onPress: (function (param) {
                                        MatomoNext.push([
                                              "trackEvent",
                                              "message-pour-kyan",
                                              "contact",
                                              "vcard"
                                            ]);
                                        
                                      })
                                  })
                            }), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XL */1
                            }), React.createElement(ReactNative.Text, {
                              children: "😁",
                              style: {
                                fontSize: 80,
                                textAlign: "center"
                              }
                            }), React.createElement(Spacer$ReactMultiversal.make, {
                              size: /* XXL */0
                            })), React.createElement(WebsiteFooter.make, {}))), React.createElement(WindowSizeFilter.SMax.make, {
                  children: React.createElement(TabBar.make, {})
                }));
}

var make = PageMessageForKyan;

var $$default = PageMessageForKyan;

export {
  styles ,
  make ,
  $$default ,
  $$default as default,
  
}
/* styles Not a pure module */
